/* tslint:disable */
/* eslint-disable */
/**
 * Amazon Shipping API
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * The version of the OpenAPI document: v2
 * Contact: swa-api-core@amazon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { Configuration } from './configuration';
import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';

/**
 * Access point details
 * @export
 * @interface AccessPoint
 */
export interface AccessPoint {
    /**
     * Unique identifier for the access point
     * @type {string}
     * @memberof AccessPoint
     */
    accessPointId?: string;
    /**
     * Name of entity (store/hub etc) where this access point is located
     * @type {string}
     * @memberof AccessPoint
     */
    name?: string;
    /**
     * Timezone of access point
     * @type {string}
     * @memberof AccessPoint
     */
    timezone?: string;
    /**
     * 
     * @type {AccessPointType}
     * @memberof AccessPoint
     */
    type?: AccessPointType | 'HELIX' | 'CAMPUS_LOCKER' | 'OMNI_LOCKER' | 'ODIN_LOCKER' | 'DOBBY_LOCKER' | 'CORE_LOCKER' | '3P' | 'CAMPUS_ROOM';
    /**
     * 
     * @type {AccessibilityAttributes}
     * @memberof AccessPoint
     */
    accessibilityAttributes?: AccessibilityAttributes;
    /**
     * 
     * @type {Address}
     * @memberof AccessPoint
     */
    address?: Address;
    /**
     * 
     * @type {Array<ExceptionOperatingHours>}
     * @memberof AccessPoint
     */
    exceptionOperatingHours?: Array<ExceptionOperatingHours>;
    /**
     * 
     * @type {string}
     * @memberof AccessPoint
     */
    assistanceType?: AccessPointAssistanceTypeEnum | 'STAFF_ASSISTED' | 'SELF_ASSISTED';
    /**
     * The score of access point, based on proximity to postal code and sorting preference. This can be used to sort access point results on shipper\'s end.
     * @type {string}
     * @memberof AccessPoint
     */
    score?: string;
    /**
     * Map of day of the week to operating hours of that day
     * @type {{ [key: string]: OperatingHours; }}
     * @memberof AccessPoint
     */
    standardOperatingHours?: { [key: string]: OperatingHours; };
}

/**
    * @export
    * @enum {string}
    */
export enum AccessPointAssistanceTypeEnum {
    StaffAssisted = 'STAFF_ASSISTED',
    SelfAssisted = 'SELF_ASSISTED'
}

/**
 * 
 * @export
 * @interface AccessPointDetails
 */
export interface AccessPointDetails {
    /**
     * Unique identifier for the access point
     * @type {string}
     * @memberof AccessPointDetails
     */
    accessPointId?: string;
}
/**
 * The type of access point, like counter (HELIX), lockers, etc.
 * @export
 * @enum {string}
 */
export enum AccessPointType {
    Helix = 'HELIX',
    CampusLocker = 'CAMPUS_LOCKER',
    OmniLocker = 'OMNI_LOCKER',
    OdinLocker = 'ODIN_LOCKER',
    DobbyLocker = 'DOBBY_LOCKER',
    CoreLocker = 'CORE_LOCKER',
    _3P = '3P',
    CampusRoom = 'CAMPUS_ROOM'
}

/**
 * Defines the accessibility details of the access point.
 * @export
 * @interface AccessibilityAttributes
 */
export interface AccessibilityAttributes {
    /**
     * The approximate distance of access point from input postalCode\'s centroid.
     * @type {string}
     * @memberof AccessibilityAttributes
     */
    distance?: string;
    /**
     * The approximate (static) drive time from input postal code\'s centroid.
     * @type {number}
     * @memberof AccessibilityAttributes
     */
    driveTime?: number;
}
/**
 * Account Status.
 * @export
 * @enum {string}
 */
export enum AccountStatus {
    Active = 'ACTIVE',
    Inactive = 'INACTIVE',
    Pending = 'PENDING',
    Suspended = 'SUSPENDED'
}

/**
 * Shipper Account Type.
 * @export
 * @enum {string}
 */
export enum AccountType {
    ShipperAccount = 'SHIPPER_ACCOUNT',
    ShipperAccountWithInvoice = 'SHIPPER_ACCOUNT_WITH_INVOICE',
    AmazonAccount = 'AMAZON_ACCOUNT'
}

/**
 * Active Account Details
 * @export
 * @interface ActiveAccount
 */
export interface ActiveAccount {
    /**
     * Account Id associated with this account.
     * @type {string}
     * @memberof ActiveAccount
     */
    accountId?: string;
    /**
     * The carrier identifier for the offering, provided by the carrier.
     * @type {string}
     * @memberof ActiveAccount
     */
    carrierId?: string;
}
/**
 * The address.
 * @export
 * @interface Address
 */
export interface Address {
    /**
     * The name of the person, business or institution at the address.
     * @type {string}
     * @memberof Address
     */
    name: string;
    /**
     * The first line of the address.
     * @type {string}
     * @memberof Address
     */
    addressLine1: string;
    /**
     * Additional address information, if required.
     * @type {string}
     * @memberof Address
     */
    addressLine2?: string;
    /**
     * Additional address information, if required.
     * @type {string}
     * @memberof Address
     */
    addressLine3?: string;
    /**
     * The name of the business or institution associated with the address.
     * @type {string}
     * @memberof Address
     */
    companyName?: string;
    /**
     * The state, county or region where the person, business or institution is located.
     * @type {string}
     * @memberof Address
     */
    stateOrRegion: string;
    /**
     * The city or town where the person, business or institution is located.
     * @type {string}
     * @memberof Address
     */
    city: string;
    /**
     * The two digit country code. Follows ISO 3166-1 alpha-2 format.
     * @type {string}
     * @memberof Address
     */
    countryCode: string;
    /**
     * The postal code of that address. It contains a series of letters or digits or both, sometimes including spaces or punctuation.
     * @type {string}
     * @memberof Address
     */
    postalCode: string;
    /**
     * The email address of the contact associated with the address.
     * @type {string}
     * @memberof Address
     */
    email?: string;
    /**
     * The phone number of the person, business or institution located at that address, including the country calling code.
     * @type {string}
     * @memberof Address
     */
    phoneNumber?: string;
    /**
     * 
     * @type {Geocode}
     * @memberof Address
     */
    geocode?: Geocode;
}
/**
 * Amazon order information. This is required if the shipment source channel is Amazon.
 * @export
 * @interface AmazonOrderDetails
 */
export interface AmazonOrderDetails {
    /**
     * The Amazon order ID associated with the Amazon order fulfilled by this shipment.
     * @type {string}
     * @memberof AmazonOrderDetails
     */
    orderId: string;
}
/**
 * Amazon shipment information.
 * @export
 * @interface AmazonShipmentDetails
 */
export interface AmazonShipmentDetails {
    /**
     * This attribute is required only for a Direct Fulfillment shipment. This is the encrypted shipment ID.
     * @type {string}
     * @memberof AmazonShipmentDetails
     */
    shipmentId: string;
}
/**
 * The value-added services available for purchase with a shipping service offering.
 * @export
 * @interface AvailableValueAddedServiceGroup
 */
export interface AvailableValueAddedServiceGroup {
    /**
     * The type of the value-added service group.
     * @type {string}
     * @memberof AvailableValueAddedServiceGroup
     */
    groupId: string;
    /**
     * The name of the value-added service group.
     * @type {string}
     * @memberof AvailableValueAddedServiceGroup
     */
    groupDescription: string;
    /**
     * When true, one or more of the value-added services listed must be specified.
     * @type {boolean}
     * @memberof AvailableValueAddedServiceGroup
     */
    isRequired: boolean;
    /**
     * A list of optional value-added services available for purchase with a shipping service offering.
     * @type {Array<ValueAddedService>}
     * @memberof AvailableValueAddedServiceGroup
     */
    valueAddedServices?: Array<ValueAddedService>;
}
/**
 * Representing the included/excluded benefits that we offer for each ShippingOffering/Rate. Benefits being services provided by Amazon when sellers purchase shipping through Amazon.
 * @export
 * @interface Benefits
 */
export interface Benefits {
    /**
     * A list of included benefits.
     * @type {Array<string>}
     * @memberof Benefits
     */
    includedBenefits: Array<string>;
    /**
     * A list of excluded benefit. Refer to the ExcludeBenefit object for further documentation
     * @type {Array<ExcludedBenefit>}
     * @memberof Benefits
     */
    excludedBenefits: Array<ExcludedBenefit>;
}
/**
 * Response schema for the cancelShipment operation.
 * @export
 * @interface CancelShipmentResponse
 */
export interface CancelShipmentResponse {
    /**
     * The payload for the cancelShipment operation.
     * @type {{ [key: string]: object; }}
     * @memberof CancelShipmentResponse
     */
    payload?: { [key: string]: object; };
}
/**
 * Carrier Related Info
 * @export
 * @interface Carrier
 */
export interface Carrier {
    /**
     * The carrier identifier for the offering, provided by the carrier.
     * @type {string}
     * @memberof Carrier
     */
    id: string;
    /**
     * The carrier name for the offering.
     * @type {string}
     * @memberof Carrier
     */
    name: string;
}
/**
 * Attribute Properties required by carrier
 * @export
 * @interface CarrierAccountAttribute
 */
export interface CarrierAccountAttribute {
    /**
     * Attribute Name .
     * @type {string}
     * @memberof CarrierAccountAttribute
     */
    attributeName?: string;
    /**
     * Property Group.
     * @type {string}
     * @memberof CarrierAccountAttribute
     */
    propertyGroup?: string;
    /**
     * Value .
     * @type {string}
     * @memberof CarrierAccountAttribute
     */
    value?: string;
}
/**
 * Info About CarrierAccountInput
 * @export
 * @interface CarrierAccountInput
 */
export interface CarrierAccountInput {
    /**
     * descriptionLocalizationKey value .
     * @type {string}
     * @memberof CarrierAccountInput
     */
    descriptionLocalizationKey?: string;
    /**
     * name value .
     * @type {string}
     * @memberof CarrierAccountInput
     */
    name?: string;
    /**
     * groupName value .
     * @type {string}
     * @memberof CarrierAccountInput
     */
    groupName?: string;
    /**
     * 
     * @type {InputType}
     * @memberof CarrierAccountInput
     */
    inputType?: InputType | 'TEXTBOX' | 'PASSWORD';
    /**
     * mandatory or not  value .
     * @type {boolean}
     * @memberof CarrierAccountInput
     */
    isMandatory?: boolean;
    /**
     * is value is Confidential .
     * @type {boolean}
     * @memberof CarrierAccountInput
     */
    isConfidential?: boolean;
    /**
     * is value is hidden .
     * @type {boolean}
     * @memberof CarrierAccountInput
     */
    isHidden?: boolean;
    /**
     * A list of ValidationMetadata
     * @type {Array<ValidationMetadata>}
     * @memberof CarrierAccountInput
     */
    validationMetadata?: Array<ValidationMetadata>;
}
/**
 * Shipment source channel related information.
 * @export
 * @interface ChannelDetails
 */
export interface ChannelDetails {
    /**
     * 
     * @type {ChannelType}
     * @memberof ChannelDetails
     */
    channelType: ChannelType | 'AMAZON' | 'EXTERNAL';
    /**
     * 
     * @type {AmazonOrderDetails}
     * @memberof ChannelDetails
     */
    amazonOrderDetails?: AmazonOrderDetails;
    /**
     * 
     * @type {AmazonShipmentDetails}
     * @memberof ChannelDetails
     */
    amazonShipmentDetails?: AmazonShipmentDetails;
}
/**
 * The shipment source channel type.
 * @export
 * @enum {string}
 */
export enum ChannelType {
    Amazon = 'AMAZON',
    External = 'EXTERNAL'
}

/**
 * The type and amount of a charge applied on a package.
 * @export
 * @interface ChargeComponent
 */
export interface ChargeComponent {
    /**
     * 
     * @type {Currency}
     * @memberof ChargeComponent
     */
    amount?: Currency;
    /**
     * The type of charge.
     * @type {string}
     * @memberof ChargeComponent
     */
    chargeType?: ChargeComponentChargeTypeEnum | 'TAX' | 'DISCOUNT';
}

/**
    * @export
    * @enum {string}
    */
export enum ChargeComponentChargeTypeEnum {
    Tax = 'TAX',
    Discount = 'DISCOUNT'
}

/**
 * Client Reference Details
 * @export
 * @interface ClientReferenceDetail
 */
export interface ClientReferenceDetail {
    /**
     * Client Reference type.
     * @type {string}
     * @memberof ClientReferenceDetail
     */
    clientReferenceType: ClientReferenceDetailClientReferenceTypeEnum | 'IntegratorShipperId' | 'IntegratorMerchantId';
    /**
     * The Client Reference Id.
     * @type {string}
     * @memberof ClientReferenceDetail
     */
    clientReferenceId: string;
}

/**
    * @export
    * @enum {string}
    */
export enum ClientReferenceDetailClientReferenceTypeEnum {
    IntegratorShipperId = 'IntegratorShipperId',
    IntegratorMerchantId = 'IntegratorMerchantId'
}

/**
 * The amount to collect on delivery.
 * @export
 * @interface CollectOnDelivery
 */
export interface CollectOnDelivery {
    /**
     * 
     * @type {Currency}
     * @memberof CollectOnDelivery
     */
    amount: Currency;
}
/**
 * Active Account Details
 * @export
 * @interface CollectionFormsHistoryRecord
 */
export interface CollectionFormsHistoryRecord {
    /**
     * The carrier name for the offering.
     * @type {string}
     * @memberof CollectionFormsHistoryRecord
     */
    carrierName?: string;
    /**
     * Creation Time for this account.
     * @type {string}
     * @memberof CollectionFormsHistoryRecord
     */
    creationDate?: string;
    /**
     * 
     * @type {GenerationStatus}
     * @memberof CollectionFormsHistoryRecord
     */
    generationStatus?: GenerationStatus | 'Completed' | 'InProgress';
    /**
     * Collection Form Id for Reprint .
     * @type {string}
     * @memberof CollectionFormsHistoryRecord
     */
    collectionFormId?: string;
    /**
     * 
     * @type {Address}
     * @memberof CollectionFormsHistoryRecord
     */
    shipFromAddress?: Address;
}
/**
 * Collection Form Document Details
 * @export
 * @interface CollectionsFormDocument
 */
export interface CollectionsFormDocument {
    /**
     * Base64 document Value of Collection.
     * @type {string}
     * @memberof CollectionsFormDocument
     */
    base64EncodedContent?: string;
    /**
     * Collection Document format is PDF.
     * @type {string}
     * @memberof CollectionsFormDocument
     */
    documentFormat?: string;
}
/**
 * The monetary value in the currency indicated, in ISO 4217 standard format.
 * @export
 * @interface Currency
 */
export interface Currency {
    /**
     * The monetary value.
     * @type {number}
     * @memberof Currency
     */
    value: number;
    /**
     * The ISO 4217 format 3-character currency code.
     * @type {string}
     * @memberof Currency
     */
    unit: string;
}
/**
 * Details related to any dangerous goods/items that are being shipped.
 * @export
 * @interface DangerousGoodsDetails
 */
export interface DangerousGoodsDetails {
    /**
     * The specific UNID of the item being shipped.
     * @type {string}
     * @memberof DangerousGoodsDetails
     */
    unitedNationsRegulatoryId?: string;
    /**
     * The specific regulatory class  of the item being shipped.
     * @type {string}
     * @memberof DangerousGoodsDetails
     */
    transportationRegulatoryClass?: string;
    /**
     * The specific packaging group of the item being shipped.
     * @type {string}
     * @memberof DangerousGoodsDetails
     */
    packingGroup?: DangerousGoodsDetailsPackingGroupEnum | 'I' | 'II' | 'III';
    /**
     * The specific packing instruction of the item being shipped.
     * @type {string}
     * @memberof DangerousGoodsDetails
     */
    packingInstruction?: DangerousGoodsDetailsPackingInstructionEnum | 'PI965_SECTION_IA' | 'PI965_SECTION_IB' | 'PI965_SECTION_II' | 'PI966_SECTION_I' | 'PI966_SECTION_II' | 'PI967_SECTION_I' | 'PI967_SECTION_II' | 'PI968_SECTION_IA' | 'PI968_SECTION_IB' | 'PI969_SECTION_I' | 'PI969_SECTION_II' | 'PI970_SECTION_I' | 'PI970_SECTION_II';
}

/**
    * @export
    * @enum {string}
    */
export enum DangerousGoodsDetailsPackingGroupEnum {
    I = 'I',
    Ii = 'II',
    Iii = 'III'
}
/**
    * @export
    * @enum {string}
    */
export enum DangerousGoodsDetailsPackingInstructionEnum {
    Pi965SectionIa = 'PI965_SECTION_IA',
    Pi965SectionIb = 'PI965_SECTION_IB',
    Pi965SectionIi = 'PI965_SECTION_II',
    Pi966SectionI = 'PI966_SECTION_I',
    Pi966SectionIi = 'PI966_SECTION_II',
    Pi967SectionI = 'PI967_SECTION_I',
    Pi967SectionIi = 'PI967_SECTION_II',
    Pi968SectionIa = 'PI968_SECTION_IA',
    Pi968SectionIb = 'PI968_SECTION_IB',
    Pi969SectionI = 'PI969_SECTION_I',
    Pi969SectionIi = 'PI969_SECTION_II',
    Pi970SectionI = 'PI970_SECTION_I',
    Pi970SectionIi = 'PI970_SECTION_II'
}

/**
 * Date Range for query the results.
 * @export
 * @interface DateRange
 */
export interface DateRange {
    /**
     * Start Date for query .
     * @type {string}
     * @memberof DateRange
     */
    startDate?: string;
    /**
     * end date for query.
     * @type {string}
     * @memberof DateRange
     */
    endDate?: string;
}
/**
 * A set of measurements for a three-dimensional object.
 * @export
 * @interface Dimensions
 */
export interface Dimensions {
    /**
     * The length of the package.
     * @type {number}
     * @memberof Dimensions
     */
    length: number;
    /**
     * The width of the package.
     * @type {number}
     * @memberof Dimensions
     */
    width: number;
    /**
     * The height of the package.
     * @type {number}
     * @memberof Dimensions
     */
    height: number;
    /**
     * The unit of measurement.
     * @type {string}
     * @memberof Dimensions
     */
    unit: DimensionsUnitEnum | 'INCH' | 'CENTIMETER';
}

/**
    * @export
    * @enum {string}
    */
export enum DimensionsUnitEnum {
    Inch = 'INCH',
    Centimeter = 'CENTIMETER'
}

/**
 * Item identifiers for an item in a direct fulfillment shipment.
 * @export
 * @interface DirectFulfillmentItemIdentifiers
 */
export interface DirectFulfillmentItemIdentifiers {
    /**
     * A unique identifier for an item provided by the client for a direct fulfillment shipment. This is only populated for direct fulfillment multi-piece shipments. It is required if a vendor wants to change the configuration of the packages in which the purchase order is shipped.
     * @type {string}
     * @memberof DirectFulfillmentItemIdentifiers
     */
    lineItemID: string;
    /**
     * A unique identifier for an item provided by the client for a direct fulfillment shipment. This is only populated if a single line item has multiple pieces. Defaults to 1.
     * @type {string}
     * @memberof DirectFulfillmentItemIdentifiers
     */
    pieceNumber?: string;
}
/**
 * The request schema for the directPurchaseShipment operation. When the channel type is Amazon, the shipTo address is not required and will be ignored.
 * @export
 * @interface DirectPurchaseRequest
 */
export interface DirectPurchaseRequest {
    /**
     * 
     * @type {Address}
     * @memberof DirectPurchaseRequest
     */
    shipTo?: Address;
    /**
     * 
     * @type {Address}
     * @memberof DirectPurchaseRequest
     */
    shipFrom?: Address;
    /**
     * 
     * @type {Address}
     * @memberof DirectPurchaseRequest
     */
    returnTo?: Address;
    /**
     * A list of packages to be shipped through a shipping service offering.
     * @type {Array<Package>}
     * @memberof DirectPurchaseRequest
     */
    packages?: Array<Package>;
    /**
     * 
     * @type {ChannelDetails}
     * @memberof DirectPurchaseRequest
     */
    channelDetails: ChannelDetails;
    /**
     * 
     * @type {RequestedDocumentSpecification}
     * @memberof DirectPurchaseRequest
     */
    labelSpecifications?: RequestedDocumentSpecification;
}
/**
 * The response schema for the directPurchaseShipment operation.
 * @export
 * @interface DirectPurchaseResponse
 */
export interface DirectPurchaseResponse {
    /**
     * 
     * @type {DirectPurchaseResult}
     * @memberof DirectPurchaseResponse
     */
    payload?: DirectPurchaseResult;
}
/**
 * The payload for the directPurchaseShipment operation.
 * @export
 * @interface DirectPurchaseResult
 */
export interface DirectPurchaseResult {
    /**
     * The unique shipment identifier provided by a shipping service.
     * @type {string}
     * @memberof DirectPurchaseResult
     */
    shipmentId: string;
    /**
     * A list of post-purchase details about a package that will be shipped using a shipping service.
     * @type {Array<PackageDocumentDetail>}
     * @memberof DirectPurchaseResult
     */
    packageDocumentDetailList?: Array<PackageDocumentDetail>;
}
/**
 * The file format of the document.
 * @export
 * @enum {string}
 */
export enum DocumentFormat {
    Pdf = 'PDF',
    Png = 'PNG',
    Zpl = 'ZPL'
}

/**
 * The size dimensions of the label.
 * @export
 * @interface DocumentSize
 */
export interface DocumentSize {
    /**
     * The width of the document measured in the units specified.
     * @type {number}
     * @memberof DocumentSize
     */
    width: number;
    /**
     * The length of the document measured in the units specified.
     * @type {number}
     * @memberof DocumentSize
     */
    length: number;
    /**
     * The unit of measurement.
     * @type {string}
     * @memberof DocumentSize
     */
    unit: DocumentSizeUnitEnum | 'INCH' | 'CENTIMETER';
}

/**
    * @export
    * @enum {string}
    */
export enum DocumentSizeUnitEnum {
    Inch = 'INCH',
    Centimeter = 'CENTIMETER'
}

/**
 * The type of shipping document.
 * @export
 * @enum {string}
 */
export enum DocumentType {
    Packslip = 'PACKSLIP',
    Label = 'LABEL',
    Receipt = 'RECEIPT',
    CustomForm = 'CUSTOM_FORM'
}

/**
 * A list of error responses returned when a request is unsuccessful.
 * @export
 * @interface ErrorList
 */
export interface ErrorList {
    /**
     * 
     * @type {Array<Error>}
     * @memberof ErrorList
     */
    errors: Array<Error>;
}
/**
 * A tracking event.
 * @export
 * @interface Event
 */
export interface Event {
    /**
     * 
     * @type {EventCode}
     * @memberof Event
     */
    eventCode: EventCode | 'ReadyForReceive' | 'PickupDone' | 'Delivered' | 'Departed' | 'DeliveryAttempted' | 'Lost' | 'OutForDelivery' | 'ArrivedAtCarrierFacility' | 'Rejected' | 'Undeliverable' | 'PickupCancelled';
    /**
     * 
     * @type {Location}
     * @memberof Event
     */
    location?: Location;
    /**
     * The ISO 8601 formatted timestamp of the event.
     * @type {string}
     * @memberof Event
     */
    eventTime: string;
}
/**
 * The tracking event type.
 * @export
 * @enum {string}
 */
export enum EventCode {
    ReadyForReceive = 'ReadyForReceive',
    PickupDone = 'PickupDone',
    Delivered = 'Delivered',
    Departed = 'Departed',
    DeliveryAttempted = 'DeliveryAttempted',
    Lost = 'Lost',
    OutForDelivery = 'OutForDelivery',
    ArrivedAtCarrierFacility = 'ArrivedAtCarrierFacility',
    Rejected = 'Rejected',
    Undeliverable = 'Undeliverable',
    PickupCancelled = 'PickupCancelled'
}

/**
 * Defines exceptions to standard operating hours for certain date ranges.
 * @export
 * @interface ExceptionOperatingHours
 */
export interface ExceptionOperatingHours {
    /**
     * 
     * @type {DateRange}
     * @memberof ExceptionOperatingHours
     */
    dateRange?: DateRange;
    /**
     * 
     * @type {OperatingHours}
     * @memberof ExceptionOperatingHours
     */
    operatingHours?: OperatingHours;
}
/**
 * Object representing an excluded benefit that is excluded for an ShippingOffering/Rate.
 * @export
 * @interface ExcludedBenefit
 */
export interface ExcludedBenefit {
    /**
     * 
     * @type {string}
     * @memberof ExcludedBenefit
     */
    benefit: string;
    /**
     * 
     * @type {string}
     * @memberof ExcludedBenefit
     */
    reasonCode: string;
}
/**
 * The request schema Call to generate the collection form.
 * @export
 * @interface GenerateCollectionFormRequest
 */
export interface GenerateCollectionFormRequest {
    /**
     * Object to pass additional information about the MCI Integrator shipperType: List of ClientReferenceDetail
     * @type {Array<ClientReferenceDetail>}
     * @memberof GenerateCollectionFormRequest
     */
    clientReferenceDetails?: Array<ClientReferenceDetail>;
    /**
     * The carrier identifier for the offering, provided by the carrier.
     * @type {string}
     * @memberof GenerateCollectionFormRequest
     */
    carrierId: string;
    /**
     * 
     * @type {Address}
     * @memberof GenerateCollectionFormRequest
     */
    shipFromAddress?: Address;
}
/**
 * The Response  for the GenerateCollectionFormResponse operation.
 * @export
 * @interface GenerateCollectionFormResponse
 */
export interface GenerateCollectionFormResponse {
    /**
     * 
     * @type {CollectionsFormDocument}
     * @memberof GenerateCollectionFormResponse
     */
    collectionsFormDocument?: CollectionsFormDocument;
}
/**
 * Generation Status.
 * @export
 * @enum {string}
 */
export enum GenerationStatus {
    Completed = 'Completed',
    InProgress = 'InProgress'
}

/**
 * Defines the latitude and longitude of the access point.
 * @export
 * @interface Geocode
 */
export interface Geocode {
    /**
     * The latitude of access point.
     * @type {string}
     * @memberof Geocode
     */
    latitude?: string;
    /**
     * The longitude of access point.
     * @type {string}
     * @memberof Geocode
     */
    longitude?: string;
}
/**
 * The response schema for the GetAccessPoints operation.
 * @export
 * @interface GetAccessPointsResponse
 */
export interface GetAccessPointsResponse {
    /**
     * 
     * @type {GetAccessPointsResult}
     * @memberof GetAccessPointsResponse
     */
    payload?: GetAccessPointsResult;
}
/**
 * The payload for the GetAccessPoints API.
 * @export
 * @interface GetAccessPointsResult
 */
export interface GetAccessPointsResult {
    /**
     * Map of type of access point to list of access points
     * @type {{ [key: string]: Array<AccessPoint>; }}
     * @memberof GetAccessPointsResult
     */
    accessPointsMap: { [key: string]: Array<AccessPoint>; };
}
/**
 * The response schema for the getAdditionalInputs operation.
 * @export
 * @interface GetAdditionalInputsResponse
 */
export interface GetAdditionalInputsResponse {
    /**
     * The JSON schema to use to provide additional inputs when required to purchase a shipping offering.
     * @type {{ [key: string]: object; }}
     * @memberof GetAdditionalInputsResponse
     */
    payload?: { [key: string]: object; };
}
/**
 * The Response  for the GetCarrierAccountFormInputsResponse operation.
 * @export
 * @interface GetCarrierAccountFormInputsResponse
 */
export interface GetCarrierAccountFormInputsResponse {
    /**
     * A list of LinkableCarrier
     * @type {Array<LinkableCarrier>}
     * @memberof GetCarrierAccountFormInputsResponse
     */
    linkableCarriersList?: Array<LinkableCarrier>;
}
/**
 * The request schema for the GetCarrierAccounts operation.
 * @export
 * @interface GetCarrierAccountsRequest
 */
export interface GetCarrierAccountsRequest {
    /**
     * Object to pass additional information about the MCI Integrator shipperType: List of ClientReferenceDetail
     * @type {Array<ClientReferenceDetail>}
     * @memberof GetCarrierAccountsRequest
     */
    clientReferenceDetails?: Array<ClientReferenceDetail>;
}
/**
 * The Response  for the GetCarrierAccountsResponse operation.
 * @export
 * @interface GetCarrierAccountsResponse
 */
export interface GetCarrierAccountsResponse {
    /**
     * A list of ActiveAccount
     * @type {Array<ActiveAccount>}
     * @memberof GetCarrierAccountsResponse
     */
    activeAccounts: Array<ActiveAccount>;
}
/**
 * The request schema to get query collections form history API .
 * @export
 * @interface GetCollectionFormHistoryRequest
 */
export interface GetCollectionFormHistoryRequest {
    /**
     * Object to pass additional information about the MCI Integrator shipperType: List of ClientReferenceDetail
     * @type {Array<ClientReferenceDetail>}
     * @memberof GetCollectionFormHistoryRequest
     */
    clientReferenceDetails?: Array<ClientReferenceDetail>;
    /**
     * max Number of Results for query .
     * @type {number}
     * @memberof GetCollectionFormHistoryRequest
     */
    maxResults?: number;
    /**
     * The carrier identifier for the offering, provided by the carrier.
     * @type {string}
     * @memberof GetCollectionFormHistoryRequest
     */
    carrierId?: string;
    /**
     * 
     * @type {Address}
     * @memberof GetCollectionFormHistoryRequest
     */
    shipFromAddress?: Address;
    /**
     * 
     * @type {DateRange}
     * @memberof GetCollectionFormHistoryRequest
     */
    dateRange?: DateRange;
}
/**
 * The Response  for the GetCollectionFormHistoryResponse operation.
 * @export
 * @interface GetCollectionFormHistoryResponse
 */
export interface GetCollectionFormHistoryResponse {
    /**
     * A list of CollectionFormsHistoryRecord
     * @type {Array<CollectionFormsHistoryRecord>}
     * @memberof GetCollectionFormHistoryResponse
     */
    collectionFormsHistoryRecordList?: Array<CollectionFormsHistoryRecord>;
    /**
     * Last Refereshed Date of collection
     * @type {string}
     * @memberof GetCollectionFormHistoryResponse
     */
    lastRefreshedDate?: string;
}
/**
 * The Response  for the GetCollectionFormResponse operation.
 * @export
 * @interface GetCollectionFormResponse
 */
export interface GetCollectionFormResponse {
    /**
     * 
     * @type {CollectionsFormDocument}
     * @memberof GetCollectionFormResponse
     */
    collectionsFormDocument?: CollectionsFormDocument;
}
/**
 * The request schema for the getRates operation. When the channelType is Amazon, the shipTo address is not required and will be ignored.
 * @export
 * @interface GetRatesRequest
 */
export interface GetRatesRequest {
    /**
     * 
     * @type {Address}
     * @memberof GetRatesRequest
     */
    shipTo?: Address;
    /**
     * 
     * @type {Address}
     * @memberof GetRatesRequest
     */
    shipFrom: Address;
    /**
     * 
     * @type {Address}
     * @memberof GetRatesRequest
     */
    returnTo?: Address;
    /**
     * The ship date and time (the requested pickup). This defaults to the current date and time.
     * @type {string}
     * @memberof GetRatesRequest
     */
    shipDate?: string;
    /**
     * 
     * @type {ShipperInstruction}
     * @memberof GetRatesRequest
     */
    shipperInstruction?: ShipperInstruction;
    /**
     * A list of packages to be shipped through a shipping service offering.
     * @type {Array<Package>}
     * @memberof GetRatesRequest
     */
    packages: Array<Package>;
    /**
     * 
     * @type {ValueAddedServiceDetails}
     * @memberof GetRatesRequest
     */
    valueAddedServices?: ValueAddedServiceDetails;
    /**
     * A list of tax detail information.
     * @type {Array<TaxDetail>}
     * @memberof GetRatesRequest
     */
    taxDetails?: Array<TaxDetail>;
    /**
     * 
     * @type {ChannelDetails}
     * @memberof GetRatesRequest
     */
    channelDetails: ChannelDetails;
    /**
     * Object to pass additional information about the MCI Integrator shipperType: List of ClientReferenceDetail
     * @type {Array<ClientReferenceDetail>}
     * @memberof GetRatesRequest
     */
    clientReferenceDetails?: Array<ClientReferenceDetail>;
    /**
     * 
     * @type {ShipmentType}
     * @memberof GetRatesRequest
     */
    shipmentType?: ShipmentType | 'FORWARD' | 'RETURNS';
    /**
     * 
     * @type {AccessPointDetails}
     * @memberof GetRatesRequest
     */
    destinationAccessPointDetails?: AccessPointDetails;
}
/**
 * The response schema for the getRates operation.
 * @export
 * @interface GetRatesResponse
 */
export interface GetRatesResponse {
    /**
     * 
     * @type {GetRatesResult}
     * @memberof GetRatesResponse
     */
    payload?: GetRatesResult;
}
/**
 * The payload for the getRates operation.
 * @export
 * @interface GetRatesResult
 */
export interface GetRatesResult {
    /**
     * A unique token generated to identify a getRates operation.
     * @type {string}
     * @memberof GetRatesResult
     */
    requestToken: string;
    /**
     * A list of eligible shipping service offerings.
     * @type {Array<Rate>}
     * @memberof GetRatesResult
     */
    rates: Array<Rate>;
    /**
     * A list of ineligible shipping service offerings.
     * @type {Array<IneligibleRate>}
     * @memberof GetRatesResult
     */
    ineligibleRates?: Array<IneligibleRate>;
}
/**
 * The response schema for the the getShipmentDocuments operation.
 * @export
 * @interface GetShipmentDocumentsResponse
 */
export interface GetShipmentDocumentsResponse {
    /**
     * 
     * @type {GetShipmentDocumentsResult}
     * @memberof GetShipmentDocumentsResponse
     */
    payload?: GetShipmentDocumentsResult;
}
/**
 * The payload for the getShipmentDocuments operation.
 * @export
 * @interface GetShipmentDocumentsResult
 */
export interface GetShipmentDocumentsResult {
    /**
     * The unique shipment identifier provided by a shipping service.
     * @type {string}
     * @memberof GetShipmentDocumentsResult
     */
    shipmentId: string;
    /**
     * 
     * @type {PackageDocumentDetail}
     * @memberof GetShipmentDocumentsResult
     */
    packageDocumentDetail: PackageDocumentDetail;
}
/**
 * The response schema for the getTracking operation.
 * @export
 * @interface GetTrackingResponse
 */
export interface GetTrackingResponse {
    /**
     * 
     * @type {GetTrackingResult}
     * @memberof GetTrackingResponse
     */
    payload?: GetTrackingResult;
}
/**
 * The payload for the getTracking operation.
 * @export
 * @interface GetTrackingResult
 */
export interface GetTrackingResult {
    /**
     * The carrier generated identifier for a package in a purchased shipment.
     * @type {string}
     * @memberof GetTrackingResult
     */
    trackingId: string;
    /**
     * The carrier generated reverse identifier for a returned package in a purchased shipment.
     * @type {string}
     * @memberof GetTrackingResult
     */
    alternateLegTrackingId: string;
    /**
     * A list of tracking events.
     * @type {Array<Event>}
     * @memberof GetTrackingResult
     */
    eventHistory: Array<Event>;
    /**
     * The date and time by which the shipment is promised to be delivered.
     * @type {string}
     * @memberof GetTrackingResult
     */
    promisedDeliveryDate: string;
    /**
     * 
     * @type {TrackingSummary}
     * @memberof GetTrackingResult
     */
    summary: TrackingSummary;
}
/**
 * The request schema for the GetUnmanifestedShipmentsRequest operation.
 * @export
 * @interface GetUnmanifestedShipmentsRequest
 */
export interface GetUnmanifestedShipmentsRequest {
    /**
     * Object to pass additional information about the MCI Integrator shipperType: List of ClientReferenceDetail
     * @type {Array<ClientReferenceDetail>}
     * @memberof GetUnmanifestedShipmentsRequest
     */
    clientReferenceDetails?: Array<ClientReferenceDetail>;
}
/**
 * The Response  for the GetUnmanifestedShipmentsResponse operation.
 * @export
 * @interface GetUnmanifestedShipmentsResponse
 */
export interface GetUnmanifestedShipmentsResponse {
    /**
     * A list of UnmanifestedCarrierInformation
     * @type {Array<UnmanifestedCarrierInformation>}
     * @memberof GetUnmanifestedShipmentsResponse
     */
    unmanifestedCarrierInformationList?: Array<UnmanifestedCarrierInformation>;
}
/**
 * The reason why a shipping service offering is ineligible.
 * @export
 * @interface IneligibilityReason
 */
export interface IneligibilityReason {
    /**
     * 
     * @type {IneligibilityReasonCode}
     * @memberof IneligibilityReason
     */
    code: IneligibilityReasonCode | 'NO_COVERAGE' | 'PICKUP_SLOT_RESTRICTION' | 'UNSUPPORTED_VAS' | 'VAS_COMBINATION_RESTRICTION' | 'SIZE_RESTRICTIONS' | 'WEIGHT_RESTRICTIONS' | 'LATE_DELIVERY' | 'PROGRAM_CONSTRAINTS' | 'TERMS_AND_CONDITIONS_NOT_ACCEPTED' | 'UNKNOWN';
    /**
     * The ineligibility reason.
     * @type {string}
     * @memberof IneligibilityReason
     */
    message: string;
}
/**
 * Reasons that make a shipment service offering ineligible.
 * @export
 * @enum {string}
 */
export enum IneligibilityReasonCode {
    NoCoverage = 'NO_COVERAGE',
    PickupSlotRestriction = 'PICKUP_SLOT_RESTRICTION',
    UnsupportedVas = 'UNSUPPORTED_VAS',
    VasCombinationRestriction = 'VAS_COMBINATION_RESTRICTION',
    SizeRestrictions = 'SIZE_RESTRICTIONS',
    WeightRestrictions = 'WEIGHT_RESTRICTIONS',
    LateDelivery = 'LATE_DELIVERY',
    ProgramConstraints = 'PROGRAM_CONSTRAINTS',
    TermsAndConditionsNotAccepted = 'TERMS_AND_CONDITIONS_NOT_ACCEPTED',
    Unknown = 'UNKNOWN'
}

/**
 * Detailed information for an ineligible shipping service offering.
 * @export
 * @interface IneligibleRate
 */
export interface IneligibleRate {
    /**
     * An identifier for the shipping service.
     * @type {string}
     * @memberof IneligibleRate
     */
    serviceId: string;
    /**
     * The name of the shipping service.
     * @type {string}
     * @memberof IneligibleRate
     */
    serviceName: string;
    /**
     * The carrier name for the offering.
     * @type {string}
     * @memberof IneligibleRate
     */
    carrierName: string;
    /**
     * The carrier identifier for the offering, provided by the carrier.
     * @type {string}
     * @memberof IneligibleRate
     */
    carrierId: string;
    /**
     * A list of reasons why a shipping service offering is ineligible.
     * @type {Array<IneligibilityReason>}
     * @memberof IneligibleRate
     */
    ineligibilityReasons: Array<IneligibilityReason>;
}
/**
 * Type of Input.
 * @export
 * @enum {string}
 */
export enum InputType {
    Textbox = 'TEXTBOX',
    Password = 'PASSWORD'
}

/**
 * The invoice details for charges associated with the goods in the package. Only applies to certain regions.
 * @export
 * @interface InvoiceDetails
 */
export interface InvoiceDetails {
    /**
     * The invoice number of the item.
     * @type {string}
     * @memberof InvoiceDetails
     */
    invoiceNumber?: string;
    /**
     * The invoice date of the item in ISO 8061 format.
     * @type {string}
     * @memberof InvoiceDetails
     */
    invoiceDate?: string;
}
/**
 * An item in a package.
 * @export
 * @interface Item
 */
export interface Item {
    /**
     * 
     * @type {Currency}
     * @memberof Item
     */
    itemValue?: Currency;
    /**
     * The product description of the item.
     * @type {string}
     * @memberof Item
     */
    description?: string;
    /**
     * A unique identifier for an item provided by the client.
     * @type {string}
     * @memberof Item
     */
    itemIdentifier?: string;
    /**
     * The number of units. This value is required.
     * @type {number}
     * @memberof Item
     */
    quantity: number;
    /**
     * 
     * @type {Weight}
     * @memberof Item
     */
    weight?: Weight;
    /**
     * 
     * @type {LiquidVolume}
     * @memberof Item
     */
    liquidVolume?: LiquidVolume;
    /**
     * When true, the item qualifies as hazardous materials (hazmat). Defaults to false.
     * @type {boolean}
     * @memberof Item
     */
    isHazmat?: boolean;
    /**
     * 
     * @type {DangerousGoodsDetails}
     * @memberof Item
     */
    dangerousGoodsDetails?: DangerousGoodsDetails;
    /**
     * The product type of the item.
     * @type {string}
     * @memberof Item
     */
    productType?: string;
    /**
     * 
     * @type {InvoiceDetails}
     * @memberof Item
     */
    invoiceDetails?: InvoiceDetails;
    /**
     * A list of unique serial numbers in an Amazon package that can be used to guarantee non-fraudulent items. The number of serial numbers in the list must be less than or equal to the quantity of items being shipped. Only applicable when channel source is Amazon.
     * @type {Array<string>}
     * @memberof Item
     */
    serialNumbers?: Array<string>;
    /**
     * 
     * @type {DirectFulfillmentItemIdentifiers}
     * @memberof Item
     */
    directFulfillmentItemIdentifiers?: DirectFulfillmentItemIdentifiers;
}
/**
 * The request schema for verify and add the merchant\'s account with a certain carrier.
 * @export
 * @interface LinkCarrierAccountRequest
 */
export interface LinkCarrierAccountRequest {
    /**
     * Object to pass additional information about the MCI Integrator shipperType: List of ClientReferenceDetail
     * @type {Array<ClientReferenceDetail>}
     * @memberof LinkCarrierAccountRequest
     */
    clientReferenceDetails?: Array<ClientReferenceDetail>;
    /**
     * CarrierAccountType  associated with account.
     * @type {string}
     * @memberof LinkCarrierAccountRequest
     */
    carrierAccountType: string;
    /**
     * A list of all attributes required by the carrier in order to successfully link the merchant\'s account
     * @type {Array<CarrierAccountAttribute>}
     * @memberof LinkCarrierAccountRequest
     */
    carrierAccountAttributes: Array<CarrierAccountAttribute>;
    /**
     * A list of all attributes required by the carrier in order to successfully link the merchant\'s account
     * @type {Array<CarrierAccountAttribute>}
     * @memberof LinkCarrierAccountRequest
     */
    encryptedCarrierAccountAttributes?: Array<CarrierAccountAttribute>;
}
/**
 * The Response  for the LinkCarrierAccount operation.
 * @export
 * @interface LinkCarrierAccountResponse
 */
export interface LinkCarrierAccountResponse {
    /**
     * 
     * @type {AccountStatus}
     * @memberof LinkCarrierAccountResponse
     */
    registrationStatus?: AccountStatus | 'ACTIVE' | 'INACTIVE' | 'PENDING' | 'SUSPENDED';
}
/**
 * Info About Linkable Account Type
 * @export
 * @interface LinkableAccountType
 */
export interface LinkableAccountType {
    /**
     * 
     * @type {AccountType}
     * @memberof LinkableAccountType
     */
    accountType?: AccountType | 'SHIPPER_ACCOUNT' | 'SHIPPER_ACCOUNT_WITH_INVOICE' | 'AMAZON_ACCOUNT';
    /**
     * A list of CarrierAccountInput
     * @type {Array<CarrierAccountInput>}
     * @memberof LinkableAccountType
     */
    carrierAccountInputs?: Array<CarrierAccountInput>;
}
/**
 * Info About Linkable Carrier
 * @export
 * @interface LinkableCarrier
 */
export interface LinkableCarrier {
    /**
     * The carrier identifier for the offering, provided by the carrier.
     * @type {string}
     * @memberof LinkableCarrier
     */
    carrierId?: string;
    /**
     * A list of LinkableAccountType
     * @type {Array<LinkableAccountType>}
     * @memberof LinkableCarrier
     */
    linkableAccountTypes?: Array<LinkableAccountType>;
}
/**
 * Liquid Volume.
 * @export
 * @interface LiquidVolume
 */
export interface LiquidVolume {
    /**
     * The unit of measurement.
     * @type {string}
     * @memberof LiquidVolume
     */
    unit: LiquidVolumeUnitEnum | 'ML' | 'L' | 'FL_OZ' | 'GAL' | 'PT' | 'QT' | 'C';
    /**
     * The measurement value.
     * @type {number}
     * @memberof LiquidVolume
     */
    value: number;
}

/**
    * @export
    * @enum {string}
    */
export enum LiquidVolumeUnitEnum {
    Ml = 'ML',
    L = 'L',
    FlOz = 'FL_OZ',
    Gal = 'GAL',
    Pt = 'PT',
    Qt = 'QT',
    C = 'C'
}

/**
 * The location where the person, business or institution is located.
 * @export
 * @interface Location
 */
export interface Location {
    /**
     * The state, county or region where the person, business or institution is located.
     * @type {string}
     * @memberof Location
     */
    stateOrRegion?: string;
    /**
     * The city or town where the person, business or institution is located.
     * @type {string}
     * @memberof Location
     */
    city?: string;
    /**
     * The two digit country code. Follows ISO 3166-1 alpha-2 format.
     * @type {string}
     * @memberof Location
     */
    countryCode?: string;
    /**
     * The postal code of that address. It contains a series of letters or digits or both, sometimes including spaces or punctuation.
     * @type {string}
     * @memberof Location
     */
    postalCode?: string;
}
/**
 * Error response returned when the request is unsuccessful.
 * @export
 * @interface ModelError
 */
export interface ModelError {
    /**
     * An error code that identifies the type of error that occurred.
     * @type {string}
     * @memberof ModelError
     */
    code: string;
    /**
     * A message that describes the error condition.
     * @type {string}
     * @memberof ModelError
     */
    message: string;
    /**
     * Additional details that can help the caller understand or fix the issue.
     * @type {string}
     * @memberof ModelError
     */
    details?: string;
}
/**
 * The time windows promised for pickup and delivery events.
 * @export
 * @interface ModelPromise
 */
export interface ModelPromise {
    /**
     * 
     * @type {TimeWindow}
     * @memberof ModelPromise
     */
    deliveryWindow?: TimeWindow;
    /**
     * 
     * @type {TimeWindow}
     * @memberof ModelPromise
     */
    pickupWindow?: TimeWindow;
}
/**
 * The request schema for the OneClickShipment operation. When the channelType is not Amazon, shipTo is required and when channelType is Amazon shipTo is ignored.
 * @export
 * @interface OneClickShipmentRequest
 */
export interface OneClickShipmentRequest {
    /**
     * 
     * @type {Address}
     * @memberof OneClickShipmentRequest
     */
    shipTo?: Address;
    /**
     * 
     * @type {Address}
     * @memberof OneClickShipmentRequest
     */
    shipFrom: Address;
    /**
     * 
     * @type {Address}
     * @memberof OneClickShipmentRequest
     */
    returnTo?: Address;
    /**
     * The ship date and time (the requested pickup). This defaults to the current date and time.
     * @type {string}
     * @memberof OneClickShipmentRequest
     */
    shipDate?: string;
    /**
     * A list of packages to be shipped through a shipping service offering.
     * @type {Array<Package>}
     * @memberof OneClickShipmentRequest
     */
    packages: Array<Package>;
    /**
     * The value-added services to be added to a shipping service purchase.
     * @type {Array<OneClickShipmentValueAddedService>}
     * @memberof OneClickShipmentRequest
     */
    valueAddedServicesDetails?: Array<OneClickShipmentValueAddedService>;
    /**
     * A list of tax detail information.
     * @type {Array<TaxDetail>}
     * @memberof OneClickShipmentRequest
     */
    taxDetails?: Array<TaxDetail>;
    /**
     * 
     * @type {ChannelDetails}
     * @memberof OneClickShipmentRequest
     */
    channelDetails: ChannelDetails;
    /**
     * 
     * @type {RequestedDocumentSpecification}
     * @memberof OneClickShipmentRequest
     */
    labelSpecifications: RequestedDocumentSpecification;
    /**
     * 
     * @type {ServiceSelection}
     * @memberof OneClickShipmentRequest
     */
    serviceSelection: ServiceSelection;
    /**
     * 
     * @type {ShipperInstruction}
     * @memberof OneClickShipmentRequest
     */
    shipperInstruction?: ShipperInstruction;
    /**
     * 
     * @type {AccessPointDetails}
     * @memberof OneClickShipmentRequest
     */
    destinationAccessPointDetails?: AccessPointDetails;
}
/**
 * The response schema for the OneClickShipment operation.
 * @export
 * @interface OneClickShipmentResponse
 */
export interface OneClickShipmentResponse {
    /**
     * 
     * @type {OneClickShipmentResult}
     * @memberof OneClickShipmentResponse
     */
    payload?: OneClickShipmentResult;
}
/**
 * The payload for the OneClickShipment API.
 * @export
 * @interface OneClickShipmentResult
 */
export interface OneClickShipmentResult {
    /**
     * The unique shipment identifier provided by a shipping service.
     * @type {string}
     * @memberof OneClickShipmentResult
     */
    shipmentId: string;
    /**
     * A list of post-purchase details about a package that will be shipped using a shipping service.
     * @type {Array<PackageDocumentDetail>}
     * @memberof OneClickShipmentResult
     */
    packageDocumentDetails: Array<PackageDocumentDetail>;
    /**
     * 
     * @type {ModelPromise}
     * @memberof OneClickShipmentResult
     */
    promise: ModelPromise;
    /**
     * 
     * @type {Carrier}
     * @memberof OneClickShipmentResult
     */
    carrier: Carrier;
    /**
     * 
     * @type {Service}
     * @memberof OneClickShipmentResult
     */
    service: Service;
    /**
     * 
     * @type {Currency}
     * @memberof OneClickShipmentResult
     */
    totalCharge: Currency;
}
/**
 * A value-added service to be applied to a shipping service purchase.
 * @export
 * @interface OneClickShipmentValueAddedService
 */
export interface OneClickShipmentValueAddedService {
    /**
     * The identifier of the selected value-added service.
     * @type {string}
     * @memberof OneClickShipmentValueAddedService
     */
    id: string;
    /**
     * 
     * @type {Currency}
     * @memberof OneClickShipmentValueAddedService
     */
    amount?: Currency;
}
/**
 * The hours in which the access point shall remain operational
 * @export
 * @interface OperatingHours
 */
export interface OperatingHours {
    /**
     * 
     * @type {TimeOfDay}
     * @memberof OperatingHours
     */
    closingTime?: TimeOfDay;
    /**
     * 
     * @type {TimeOfDay}
     * @memberof OperatingHours
     */
    openingTime?: TimeOfDay;
    /**
     * 
     * @type {Array<TimeOfDay>}
     * @memberof OperatingHours
     */
    midDayClosures?: Array<TimeOfDay>;
}
/**
 * A package to be shipped through a shipping service offering.
 * @export
 * @interface Package
 */
export interface Package {
    /**
     * 
     * @type {Dimensions}
     * @memberof Package
     */
    dimensions: Dimensions;
    /**
     * 
     * @type {Weight}
     * @memberof Package
     */
    weight: Weight;
    /**
     * 
     * @type {Currency}
     * @memberof Package
     */
    insuredValue: Currency;
    /**
     * When true, the package contains hazardous materials. Defaults to false.
     * @type {boolean}
     * @memberof Package
     */
    isHazmat?: boolean;
    /**
     * The seller name displayed on the label.
     * @type {string}
     * @memberof Package
     */
    sellerDisplayName?: string;
    /**
     * A list of charges based on the shipping service charges applied on a package.
     * @type {Array<ChargeComponent>}
     * @memberof Package
     */
    charges?: Array<ChargeComponent>;
    /**
     * A client provided unique identifier for a package being shipped. This value should be saved by the client to pass as a parameter to the getShipmentDocuments operation.
     * @type {string}
     * @memberof Package
     */
    packageClientReferenceId: string;
    /**
     * A list of items.
     * @type {Array<Item>}
     * @memberof Package
     */
    items: Array<Item>;
}
/**
 * A document related to a package.
 * @export
 * @interface PackageDocument
 */
export interface PackageDocument {
    /**
     * 
     * @type {DocumentType}
     * @memberof PackageDocument
     */
    type: DocumentType | 'PACKSLIP' | 'LABEL' | 'RECEIPT' | 'CUSTOM_FORM';
    /**
     * 
     * @type {DocumentFormat}
     * @memberof PackageDocument
     */
    format: DocumentFormat | 'PDF' | 'PNG' | 'ZPL';
    /**
     * A Base64 encoded string of the file contents.
     * @type {string}
     * @memberof PackageDocument
     */
    contents: string;
}
/**
 * The post-purchase details of a package that will be shipped using a shipping service.
 * @export
 * @interface PackageDocumentDetail
 */
export interface PackageDocumentDetail {
    /**
     * A client provided unique identifier for a package being shipped. This value should be saved by the client to pass as a parameter to the getShipmentDocuments operation.
     * @type {string}
     * @memberof PackageDocumentDetail
     */
    packageClientReferenceId: string;
    /**
     * A list of documents related to a package.
     * @type {Array<PackageDocument>}
     * @memberof PackageDocumentDetail
     */
    packageDocuments: Array<PackageDocument>;
    /**
     * The carrier generated identifier for a package in a purchased shipment.
     * @type {string}
     * @memberof PackageDocumentDetail
     */
    trackingId?: string;
}
/**
 * Payment type of the purchase.
 * @export
 * @enum {string}
 */
export enum PaymentType {
    ThroughAmazon = 'PAY_THROUGH_AMAZON',
    DirectToCarrier = 'PAY_DIRECT_TO_CARRIER'
}

/**
 * The format options available for a label.
 * @export
 * @interface PrintOption
 */
export interface PrintOption {
    /**
     * A list of the supported DPI options for a document.
     * @type {Array<number>}
     * @memberof PrintOption
     */
    supportedDPIs?: Array<number>;
    /**
     * A list of the supported page layout options for a document.
     * @type {Array<string>}
     * @memberof PrintOption
     */
    supportedPageLayouts: Array<string>;
    /**
     * A list of the supported needFileJoining boolean values for a document.
     * @type {Array<boolean>}
     * @memberof PrintOption
     */
    supportedFileJoiningOptions: Array<boolean>;
    /**
     * A list of the supported documented details.
     * @type {Array<SupportedDocumentDetail>}
     * @memberof PrintOption
     */
    supportedDocumentDetails: Array<SupportedDocumentDetail>;
}
/**
 * The request schema for the purchaseShipment operation.
 * @export
 * @interface PurchaseShipmentRequest
 */
export interface PurchaseShipmentRequest {
    /**
     * A unique token generated to identify a getRates operation.
     * @type {string}
     * @memberof PurchaseShipmentRequest
     */
    requestToken: string;
    /**
     * An identifier for the rate (shipment offering) provided by a shipping service provider.
     * @type {string}
     * @memberof PurchaseShipmentRequest
     */
    rateId: string;
    /**
     * 
     * @type {RequestedDocumentSpecification}
     * @memberof PurchaseShipmentRequest
     */
    requestedDocumentSpecification: RequestedDocumentSpecification;
    /**
     * The value-added services to be added to a shipping service purchase.
     * @type {Array<RequestedValueAddedService>}
     * @memberof PurchaseShipmentRequest
     */
    requestedValueAddedServices?: Array<RequestedValueAddedService>;
    /**
     * The additional inputs required to purchase a shipping offering, in JSON format. The JSON provided here must adhere to the JSON schema that is returned in the response to the getAdditionalInputs operation.  Additional inputs are only required when indicated by the requiresAdditionalInputs property in the response to the getRates operation.
     * @type {{ [key: string]: object; }}
     * @memberof PurchaseShipmentRequest
     */
    additionalInputs?: { [key: string]: object; };
}
/**
 * The response schema for the purchaseShipment operation.
 * @export
 * @interface PurchaseShipmentResponse
 */
export interface PurchaseShipmentResponse {
    /**
     * 
     * @type {PurchaseShipmentResult}
     * @memberof PurchaseShipmentResponse
     */
    payload?: PurchaseShipmentResult;
}
/**
 * The payload for the purchaseShipment operation.
 * @export
 * @interface PurchaseShipmentResult
 */
export interface PurchaseShipmentResult {
    /**
     * The unique shipment identifier provided by a shipping service.
     * @type {string}
     * @memberof PurchaseShipmentResult
     */
    shipmentId: string;
    /**
     * A list of post-purchase details about a package that will be shipped using a shipping service.
     * @type {Array<PackageDocumentDetail>}
     * @memberof PurchaseShipmentResult
     */
    packageDocumentDetails: Array<PackageDocumentDetail>;
    /**
     * 
     * @type {ModelPromise}
     * @memberof PurchaseShipmentResult
     */
    promise: ModelPromise;
}
/**
 * The details of a shipping service offering.
 * @export
 * @interface Rate
 */
export interface Rate {
    /**
     * An identifier for the rate (shipment offering) provided by a shipping service provider.
     * @type {string}
     * @memberof Rate
     */
    rateId: string;
    /**
     * The carrier identifier for the offering, provided by the carrier.
     * @type {string}
     * @memberof Rate
     */
    carrierId: string;
    /**
     * The carrier name for the offering.
     * @type {string}
     * @memberof Rate
     */
    carrierName: string;
    /**
     * An identifier for the shipping service.
     * @type {string}
     * @memberof Rate
     */
    serviceId: string;
    /**
     * The name of the shipping service.
     * @type {string}
     * @memberof Rate
     */
    serviceName: string;
    /**
     * 
     * @type {Weight}
     * @memberof Rate
     */
    billedWeight?: Weight;
    /**
     * 
     * @type {Currency}
     * @memberof Rate
     */
    totalCharge: Currency;
    /**
     * 
     * @type {ModelPromise}
     * @memberof Rate
     */
    promise: ModelPromise;
    /**
     * A list of the document specifications supported for a shipment service offering.
     * @type {Array<SupportedDocumentSpecification>}
     * @memberof Rate
     */
    supportedDocumentSpecifications: Array<SupportedDocumentSpecification>;
    /**
     * A list of value-added services available for a shipping service offering.
     * @type {Array<AvailableValueAddedServiceGroup>}
     * @memberof Rate
     */
    availableValueAddedServiceGroups?: Array<AvailableValueAddedServiceGroup>;
    /**
     * When true, indicates that additional inputs are required to purchase this shipment service. You must then call the getAdditionalInputs operation to return the JSON schema to use when providing the additional inputs to the purchaseShipment operation.
     * @type {boolean}
     * @memberof Rate
     */
    requiresAdditionalInputs: boolean;
    /**
     * A list of RateItem
     * @type {Array<RateItem>}
     * @memberof Rate
     */
    rateItemList?: Array<RateItem>;
    /**
     * 
     * @type {PaymentType}
     * @memberof Rate
     */
    paymentType?: PaymentType | 'PAY_THROUGH_AMAZON' | 'PAY_DIRECT_TO_CARRIER';
    /**
     * 
     * @type {Benefits}
     * @memberof Rate
     */
    benefits?: Benefits;
}
/**
 * Rate Item for shipping (base cost, transaction fee, confirmation, insurance, etc.) Data source definition: 
 * @export
 * @interface RateItem
 */
export interface RateItem {
    /**
     * 
     * @type {RateItemID}
     * @memberof RateItem
     */
    rateItemID?: RateItemID | 'BASE_RATE' | 'TRANSACTION_FEE' | 'ADULT_SIGNATURE_CONFIRMATION' | 'SIGNATURE_CONFIRMATION' | 'NO_CONFIRMATION' | 'WAIVE_SIGNATURE' | 'IMPLIED_LIABILITY' | 'HIDDEN_POSTAGE' | 'DECLARED_VALUE' | 'SUNDAY_HOLIDAY_DELIVERY' | 'DELIVERY_CONFIRMATION' | 'IMPORT_DUTY_CHARGE' | 'VAT' | 'NO_SATURDAY_DELIVERY' | 'INSURANCE' | 'COD' | 'FUEL_SURCHARGE' | 'INSPECTION_CHARGE' | 'DELIVERY_AREA_SURCHARGE' | 'WAYBILL_CHARGE' | 'AMAZON_SPONSORED_DISCOUNT' | 'INTEGRATOR_SPONSORED_DISCOUNT' | 'OVERSIZE_SURCHARGE' | 'CONGESTION_CHARGE' | 'RESIDENTIAL_SURCHARGE' | 'ADDITIONAL_SURCHARGE' | 'SURCHARGE' | 'REBATE';
    /**
     * 
     * @type {RateItemType}
     * @memberof RateItem
     */
    rateItemType?: RateItemType | 'MANDATORY' | 'OPTIONAL' | 'INCLUDED';
    /**
     * 
     * @type {Currency}
     * @memberof RateItem
     */
    rateItemCharge?: Currency;
    /**
     * Used for the localization.
     * @type {string}
     * @memberof RateItem
     */
    rateItemNameLocalization?: string;
}
/**
 * Unique ID for the rateItem.
 * @export
 * @enum {string}
 */
export enum RateItemID {
    BaseRate = 'BASE_RATE',
    TransactionFee = 'TRANSACTION_FEE',
    AdultSignatureConfirmation = 'ADULT_SIGNATURE_CONFIRMATION',
    SignatureConfirmation = 'SIGNATURE_CONFIRMATION',
    NoConfirmation = 'NO_CONFIRMATION',
    WaiveSignature = 'WAIVE_SIGNATURE',
    ImpliedLiability = 'IMPLIED_LIABILITY',
    HiddenPostage = 'HIDDEN_POSTAGE',
    DeclaredValue = 'DECLARED_VALUE',
    SundayHolidayDelivery = 'SUNDAY_HOLIDAY_DELIVERY',
    DeliveryConfirmation = 'DELIVERY_CONFIRMATION',
    ImportDutyCharge = 'IMPORT_DUTY_CHARGE',
    Vat = 'VAT',
    NoSaturdayDelivery = 'NO_SATURDAY_DELIVERY',
    Insurance = 'INSURANCE',
    Cod = 'COD',
    FuelSurcharge = 'FUEL_SURCHARGE',
    InspectionCharge = 'INSPECTION_CHARGE',
    DeliveryAreaSurcharge = 'DELIVERY_AREA_SURCHARGE',
    WaybillCharge = 'WAYBILL_CHARGE',
    AmazonSponsoredDiscount = 'AMAZON_SPONSORED_DISCOUNT',
    IntegratorSponsoredDiscount = 'INTEGRATOR_SPONSORED_DISCOUNT',
    OversizeSurcharge = 'OVERSIZE_SURCHARGE',
    CongestionCharge = 'CONGESTION_CHARGE',
    ResidentialSurcharge = 'RESIDENTIAL_SURCHARGE',
    AdditionalSurcharge = 'ADDITIONAL_SURCHARGE',
    Surcharge = 'SURCHARGE',
    Rebate = 'REBATE'
}

/**
 * Type of the rateItem.
 * @export
 * @enum {string}
 */
export enum RateItemType {
    Mandatory = 'MANDATORY',
    Optional = 'OPTIONAL',
    Included = 'INCLUDED'
}

/**
 * The document specifications requested. For calls to the purchaseShipment operation, the shipment purchase fails if the specified document specifications are not among those returned in the response to the getRates operation.
 * @export
 * @interface RequestedDocumentSpecification
 */
export interface RequestedDocumentSpecification {
    /**
     * 
     * @type {DocumentFormat}
     * @memberof RequestedDocumentSpecification
     */
    format: DocumentFormat | 'PDF' | 'PNG' | 'ZPL';
    /**
     * 
     * @type {DocumentSize}
     * @memberof RequestedDocumentSpecification
     */
    size: DocumentSize;
    /**
     * The dots per inch (DPI) value used in printing. This value represents a measure of the resolution of the document.
     * @type {number}
     * @memberof RequestedDocumentSpecification
     */
    dpi?: number;
    /**
     * Indicates the position of the label on the paper. Should be the same value as returned in getRates response.
     * @type {string}
     * @memberof RequestedDocumentSpecification
     */
    pageLayout?: string;
    /**
     * When true, files should be stitched together. Otherwise, files should be returned separately. Defaults to false.
     * @type {boolean}
     * @memberof RequestedDocumentSpecification
     */
    needFileJoining: boolean;
    /**
     * A list of the document types requested.
     * @type {Array<DocumentType>}
     * @memberof RequestedDocumentSpecification
     */
    requestedDocumentTypes: Array<(DocumentType | 'PACKSLIP' | 'LABEL' | 'RECEIPT' | 'CUSTOM_FORM')>;
}
/**
 * A value-added service to be applied to a shipping service purchase.
 * @export
 * @interface RequestedValueAddedService
 */
export interface RequestedValueAddedService {
    /**
     * The identifier of the selected value-added service. Must be among those returned in the response to the getRates operation.
     * @type {string}
     * @memberof RequestedValueAddedService
     */
    id: string;
}
/**
 * Service Related Info
 * @export
 * @interface Service
 */
export interface Service {
    /**
     * An identifier for the shipping service.
     * @type {string}
     * @memberof Service
     */
    id: string;
    /**
     * The name of the shipping service.
     * @type {string}
     * @memberof Service
     */
    name: string;
}
/**
 * Service Selection Criteria.
 * @export
 * @interface ServiceSelection
 */
export interface ServiceSelection {
    /**
     * A list of ServiceId.
     * @type {Array<string>}
     * @memberof ServiceSelection
     */
    serviceId: Array<string>;
}
/**
 * Shipment type.
 * @export
 * @enum {string}
 */
export enum ShipmentType {
    Forward = 'FORWARD',
    Returns = 'RETURNS'
}

/**
 * The shipper instruction.
 * @export
 * @interface ShipperInstruction
 */
export interface ShipperInstruction {
    /**
     * The delivery notes for the shipment
     * @type {string}
     * @memberof ShipperInstruction
     */
    deliveryNotes?: string;
}
/**
 * The status of the package being shipped.
 * @export
 * @enum {string}
 */
export enum Status {
    PreTransit = 'PreTransit',
    InTransit = 'InTransit',
    Delivered = 'Delivered',
    Lost = 'Lost',
    OutForDelivery = 'OutForDelivery',
    Rejected = 'Rejected',
    Undeliverable = 'Undeliverable',
    DeliveryAttempted = 'DeliveryAttempted',
    PickupCancelled = 'PickupCancelled'
}

/**
 * The supported document types for a service offering.
 * @export
 * @interface SupportedDocumentDetail
 */
export interface SupportedDocumentDetail {
    /**
     * 
     * @type {DocumentType}
     * @memberof SupportedDocumentDetail
     */
    name: DocumentType | 'PACKSLIP' | 'LABEL' | 'RECEIPT' | 'CUSTOM_FORM';
    /**
     * When true, the supported document type is required.
     * @type {boolean}
     * @memberof SupportedDocumentDetail
     */
    isMandatory: boolean;
}
/**
 * Document specification that is supported for a service offering.
 * @export
 * @interface SupportedDocumentSpecification
 */
export interface SupportedDocumentSpecification {
    /**
     * 
     * @type {DocumentFormat}
     * @memberof SupportedDocumentSpecification
     */
    format: DocumentFormat | 'PDF' | 'PNG' | 'ZPL';
    /**
     * 
     * @type {DocumentSize}
     * @memberof SupportedDocumentSpecification
     */
    size: DocumentSize;
    /**
     * A list of the format options for a label.
     * @type {Array<PrintOption>}
     * @memberof SupportedDocumentSpecification
     */
    printOptions: Array<PrintOption>;
}
/**
 * Indicates the tax specifications associated with the shipment for customs compliance purposes in certain regions.
 * @export
 * @interface TaxDetail
 */
export interface TaxDetail {
    /**
     * 
     * @type {TaxType}
     * @memberof TaxDetail
     */
    taxType: TaxType | 'GST';
    /**
     * The shipper\'s tax registration number associated with the shipment for customs compliance purposes in certain regions.
     * @type {string}
     * @memberof TaxDetail
     */
    taxRegistrationNumber: string;
}
/**
 * Indicates the type of tax.
 * @export
 * @enum {string}
 */
export enum TaxType {
    Gst = 'GST'
}

/**
 * Denotes time of the day, used for defining opening or closing time of access points
 * @export
 * @interface TimeOfDay
 */
export interface TimeOfDay {
    /**
     * 
     * @type {number}
     * @memberof TimeOfDay
     */
    hourOfDay?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeOfDay
     */
    minuteOfHour?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeOfDay
     */
    secondOfMinute?: number;
}
/**
 * The start and end time that specifies the time interval of an event.
 * @export
 * @interface TimeWindow
 */
export interface TimeWindow {
    /**
     * The start time of the time window.
     * @type {string}
     * @memberof TimeWindow
     */
    start?: string;
    /**
     * The end time of the time window.
     * @type {string}
     * @memberof TimeWindow
     */
    end?: string;
}
/**
 * A package status summary.
 * @export
 * @interface TrackingSummary
 */
export interface TrackingSummary {
    /**
     * 
     * @type {Status}
     * @memberof TrackingSummary
     */
    status?: Status | 'PreTransit' | 'InTransit' | 'Delivered' | 'Lost' | 'OutForDelivery' | 'Rejected' | 'Undeliverable' | 'DeliveryAttempted' | 'PickupCancelled';
}
/**
 * The request schema for remove the Carrier Account associated with the provided merchant.
 * @export
 * @interface UnlinkCarrierAccountRequest
 */
export interface UnlinkCarrierAccountRequest {
    /**
     * Object to pass additional information about the MCI Integrator shipperType: List of ClientReferenceDetail
     * @type {Array<ClientReferenceDetail>}
     * @memberof UnlinkCarrierAccountRequest
     */
    clientReferenceDetails?: Array<ClientReferenceDetail>;
}
/**
 * The Response  for the UnlinkCarrierAccountResponse operation.
 * @export
 * @interface UnlinkCarrierAccountResponse
 */
export interface UnlinkCarrierAccountResponse {
    /**
     * Is Carrier unlinked from Merchant
     * @type {boolean}
     * @memberof UnlinkCarrierAccountResponse
     */
    isUnlinked?: boolean;
}
/**
 * UnmanifestedCarrierInformation like carrierId CarrierName and Location
 * @export
 * @interface UnmanifestedCarrierInformation
 */
export interface UnmanifestedCarrierInformation {
    /**
     * The carrier identifier for the offering, provided by the carrier.
     * @type {string}
     * @memberof UnmanifestedCarrierInformation
     */
    carrierId?: string;
    /**
     * The carrier name for the offering.
     * @type {string}
     * @memberof UnmanifestedCarrierInformation
     */
    carrierName?: string;
    /**
     * A list of UnmanifestedShipmentLocation
     * @type {Array<UnmanifestedShipmentLocation>}
     * @memberof UnmanifestedCarrierInformation
     */
    unmanifestedShipmentLocationList?: Array<UnmanifestedShipmentLocation>;
}
/**
 * UnmanifestedShipmentLocation info 
 * @export
 * @interface UnmanifestedShipmentLocation
 */
export interface UnmanifestedShipmentLocation {
    /**
     * 
     * @type {Address}
     * @memberof UnmanifestedShipmentLocation
     */
    address?: Address;
    /**
     * Its Last Manifest Date.
     * @type {string}
     * @memberof UnmanifestedShipmentLocation
     */
    lastManifestDate?: string;
}
/**
 * ValidationMetadata Details
 * @export
 * @interface ValidationMetadata
 */
export interface ValidationMetadata {
    /**
     * errorMessage for the error.
     * @type {string}
     * @memberof ValidationMetadata
     */
    errorMessage?: string;
    /**
     * validationStrategy for the error.
     * @type {string}
     * @memberof ValidationMetadata
     */
    validationStrategy?: string;
    /**
     * Value.
     * @type {string}
     * @memberof ValidationMetadata
     */
    value?: string;
}
/**
 * A value-added service available for purchase with a shipment service offering.
 * @export
 * @interface ValueAddedService
 */
export interface ValueAddedService {
    /**
     * The identifier for the value-added service.
     * @type {string}
     * @memberof ValueAddedService
     */
    id: string;
    /**
     * The name of the value-added service.
     * @type {string}
     * @memberof ValueAddedService
     */
    name: string;
    /**
     * 
     * @type {Currency}
     * @memberof ValueAddedService
     */
    cost: Currency;
}
/**
 * A collection of supported value-added services.
 * @export
 * @interface ValueAddedServiceDetails
 */
export interface ValueAddedServiceDetails {
    /**
     * 
     * @type {CollectOnDelivery}
     * @memberof ValueAddedServiceDetails
     */
    collectOnDelivery?: CollectOnDelivery;
}
/**
 * The weight in the units indicated.
 * @export
 * @interface Weight
 */
export interface Weight {
    /**
     * The unit of measurement.
     * @type {string}
     * @memberof Weight
     */
    unit: WeightUnitEnum | 'GRAM' | 'KILOGRAM' | 'OUNCE' | 'POUND';
    /**
     * The measurement value.
     * @type {number}
     * @memberof Weight
     */
    value: number;
}

/**
    * @export
    * @enum {string}
    */
export enum WeightUnitEnum {
    Gram = 'GRAM',
    Kilogram = 'KILOGRAM',
    Ounce = 'OUNCE',
    Pound = 'POUND'
}


/**
 * ShippingApi - axios parameter creator
 * @export
 */
export const ShippingApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Cancels a purchased shipment. Returns an empty object if the shipment is successfully cancelled.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} shipmentId The shipment identifier originally returned by the purchaseShipment operation.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cancelShipment: async (shipmentId: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'shipmentId' is not null or undefined
            assertParamExists('cancelShipment', 'shipmentId', shipmentId)
            const localVarPath = `/shipping/v2/shipments/{shipmentId}/cancel`
                .replace(`{${"shipmentId"}}`, encodeURIComponent(String(shipmentId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (xAmznShippingBusinessId !== undefined && xAmznShippingBusinessId !== null) {
                localVarHeaderParameter['x-amzn-shipping-business-id'] = String(xAmznShippingBusinessId);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Purchases the shipping service for a shipment using the best fit service offering. Returns purchase related details and documents.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {DirectPurchaseRequest} body 
         * @param {string} [xAmznIdempotencyKey] A unique value which the server uses to recognize subsequent retries of the same request.
         * @param {string} [locale] The IETF Language Tag. Note that this only supports the primary language subtag with one secondary language subtag (i.e. en-US, fr-CA). The secondary language subtag is almost always a regional designation. This does not support additional subtags beyond the primary and secondary language subtags. 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        directPurchaseShipment: async (body: DirectPurchaseRequest, xAmznIdempotencyKey?: string, locale?: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            assertParamExists('directPurchaseShipment', 'body', body)
            const localVarPath = `/shipping/v2/shipments/directPurchase`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (xAmznIdempotencyKey !== undefined && xAmznIdempotencyKey !== null) {
                localVarHeaderParameter['x-amzn-IdempotencyKey'] = String(xAmznIdempotencyKey);
            }

            if (locale !== undefined && locale !== null) {
                localVarHeaderParameter['locale'] = String(locale);
            }

            if (xAmznShippingBusinessId !== undefined && xAmznShippingBusinessId !== null) {
                localVarHeaderParameter['x-amzn-shipping-business-id'] = String(xAmznShippingBusinessId);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API  Call to generate the collection form.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GenerateCollectionFormRequest} body 
         * @param {string} [xAmznIdempotencyKey] A unique value which the server uses to recognize subsequent retries of the same request.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        generateCollectionForm: async (body: GenerateCollectionFormRequest, xAmznIdempotencyKey?: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            assertParamExists('generateCollectionForm', 'body', body)
            const localVarPath = `/shipping/v2/collectionForms`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (xAmznIdempotencyKey !== undefined && xAmznIdempotencyKey !== null) {
                localVarHeaderParameter['x-amzn-IdempotencyKey'] = String(xAmznIdempotencyKey);
            }

            if (xAmznShippingBusinessId !== undefined && xAmznShippingBusinessId !== null) {
                localVarHeaderParameter['x-amzn-shipping-business-id'] = String(xAmznShippingBusinessId);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns a list of access points in proximity of input postal code.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {Array<'HELIX' | 'CAMPUS_LOCKER' | 'OMNI_LOCKER' | 'ODIN_LOCKER' | 'DOBBY_LOCKER' | 'CORE_LOCKER' | '3P' | 'CAMPUS_ROOM'>} accessPointTypes 
         * @param {string} countryCode 
         * @param {string} postalCode 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAccessPoints: async (accessPointTypes: Array<'HELIX' | 'CAMPUS_LOCKER' | 'OMNI_LOCKER' | 'ODIN_LOCKER' | 'DOBBY_LOCKER' | 'CORE_LOCKER' | '3P' | 'CAMPUS_ROOM'>, countryCode: string, postalCode: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'accessPointTypes' is not null or undefined
            assertParamExists('getAccessPoints', 'accessPointTypes', accessPointTypes)
            // verify required parameter 'countryCode' is not null or undefined
            assertParamExists('getAccessPoints', 'countryCode', countryCode)
            // verify required parameter 'postalCode' is not null or undefined
            assertParamExists('getAccessPoints', 'postalCode', postalCode)
            const localVarPath = `/shipping/v2/accessPoints`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (accessPointTypes) {
                localVarQueryParameter['accessPointTypes'] = accessPointTypes.join(COLLECTION_FORMATS.csv);
            }

            if (countryCode !== undefined) {
                localVarQueryParameter['countryCode'] = countryCode;
            }

            if (postalCode !== undefined) {
                localVarQueryParameter['postalCode'] = postalCode;
            }

            if (xAmznShippingBusinessId !== undefined && xAmznShippingBusinessId !== null) {
                localVarHeaderParameter['x-amzn-shipping-business-id'] = String(xAmznShippingBusinessId);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns the JSON schema to use for providing additional inputs when needed to purchase a shipping offering. Call the getAdditionalInputs operation when the response to a previous call to the getRates operation indicates that additional inputs are required for the rate (shipping offering) that you want to purchase.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} requestToken The request token returned in the response to the getRates operation.
         * @param {string} rateId The rate identifier for the shipping offering (rate) returned in the response to the getRates operation.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAdditionalInputs: async (requestToken: string, rateId: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'requestToken' is not null or undefined
            assertParamExists('getAdditionalInputs', 'requestToken', requestToken)
            // verify required parameter 'rateId' is not null or undefined
            assertParamExists('getAdditionalInputs', 'rateId', rateId)
            const localVarPath = `/shipping/v2/shipments/additionalInputs/schema`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (requestToken !== undefined) {
                localVarQueryParameter['requestToken'] = requestToken;
            }

            if (rateId !== undefined) {
                localVarQueryParameter['rateId'] = rateId;
            }

            if (xAmznShippingBusinessId !== undefined && xAmznShippingBusinessId !== null) {
                localVarHeaderParameter['x-amzn-shipping-business-id'] = String(xAmznShippingBusinessId);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API will return a list of input schema required to register a shipper account with the carrier.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCarrierAccountFormInputs: async (xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/shipping/v2/carrierAccountFormInputs`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (xAmznShippingBusinessId !== undefined && xAmznShippingBusinessId !== null) {
                localVarHeaderParameter['x-amzn-shipping-business-id'] = String(xAmznShippingBusinessId);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API will return Get all carrier accounts for a merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GetCarrierAccountsRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCarrierAccounts: async (body: GetCarrierAccountsRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            assertParamExists('getCarrierAccounts', 'body', body)
            const localVarPath = `/shipping/v2/carrierAccounts`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (xAmznShippingBusinessId !== undefined && xAmznShippingBusinessId !== null) {
                localVarHeaderParameter['x-amzn-shipping-business-id'] = String(xAmznShippingBusinessId);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API reprint a collection form.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} collectionFormId collection form Id to reprint a collection.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCollectionForm: async (collectionFormId: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'collectionFormId' is not null or undefined
            assertParamExists('getCollectionForm', 'collectionFormId', collectionFormId)
            const localVarPath = `/shipping/v2/collectionForms/{collectionFormId}`
                .replace(`{${"collectionFormId"}}`, encodeURIComponent(String(collectionFormId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (xAmznShippingBusinessId !== undefined && xAmznShippingBusinessId !== null) {
                localVarHeaderParameter['x-amzn-shipping-business-id'] = String(xAmznShippingBusinessId);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API Call to get the history of the previously generated collection forms.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GetCollectionFormHistoryRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCollectionFormHistory: async (body: GetCollectionFormHistoryRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            assertParamExists('getCollectionFormHistory', 'body', body)
            const localVarPath = `/shipping/v2/collectionForms/history`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (xAmznShippingBusinessId !== undefined && xAmznShippingBusinessId !== null) {
                localVarHeaderParameter['x-amzn-shipping-business-id'] = String(xAmznShippingBusinessId);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns the available shipping service offerings.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GetRatesRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRates: async (body: GetRatesRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            assertParamExists('getRates', 'body', body)
            const localVarPath = `/shipping/v2/shipments/rates`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (xAmznShippingBusinessId !== undefined && xAmznShippingBusinessId !== null) {
                localVarHeaderParameter['x-amzn-shipping-business-id'] = String(xAmznShippingBusinessId);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns the shipping documents associated with a package in a shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} shipmentId The shipment identifier originally returned by the purchaseShipment operation.
         * @param {string} packageClientReferenceId The package client reference identifier originally provided in the request body parameter for the getRates operation.
         * @param {string} [format] The file format of the document. Must be one of the supported formats returned by the getRates operation.
         * @param {number} [dpi] The resolution of the document (for example, 300 means 300 dots per inch). Must be one of the supported resolutions returned in the response to the getRates operation.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getShipmentDocuments: async (shipmentId: string, packageClientReferenceId: string, format?: string, dpi?: number, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'shipmentId' is not null or undefined
            assertParamExists('getShipmentDocuments', 'shipmentId', shipmentId)
            // verify required parameter 'packageClientReferenceId' is not null or undefined
            assertParamExists('getShipmentDocuments', 'packageClientReferenceId', packageClientReferenceId)
            const localVarPath = `/shipping/v2/shipments/{shipmentId}/documents`
                .replace(`{${"shipmentId"}}`, encodeURIComponent(String(shipmentId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (packageClientReferenceId !== undefined) {
                localVarQueryParameter['packageClientReferenceId'] = packageClientReferenceId;
            }

            if (format !== undefined) {
                localVarQueryParameter['format'] = format;
            }

            if (dpi !== undefined) {
                localVarQueryParameter['dpi'] = dpi;
            }

            if (xAmznShippingBusinessId !== undefined && xAmznShippingBusinessId !== null) {
                localVarHeaderParameter['x-amzn-shipping-business-id'] = String(xAmznShippingBusinessId);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns tracking information for a purchased shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} trackingId A carrier-generated tracking identifier originally returned by the purchaseShipment operation.
         * @param {string} carrierId A carrier identifier originally returned by the getRates operation for the selected rate.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTracking: async (trackingId: string, carrierId: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'trackingId' is not null or undefined
            assertParamExists('getTracking', 'trackingId', trackingId)
            // verify required parameter 'carrierId' is not null or undefined
            assertParamExists('getTracking', 'carrierId', carrierId)
            const localVarPath = `/shipping/v2/tracking`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (trackingId !== undefined) {
                localVarQueryParameter['trackingId'] = trackingId;
            }

            if (carrierId !== undefined) {
                localVarQueryParameter['carrierId'] = carrierId;
            }

            if (xAmznShippingBusinessId !== undefined && xAmznShippingBusinessId !== null) {
                localVarHeaderParameter['x-amzn-shipping-business-id'] = String(xAmznShippingBusinessId);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API Get all unmanifested carriers with shipment locations. Any locations which has unmanifested shipments         with an eligible carrier for manifesting shall be returned.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GetUnmanifestedShipmentsRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUnmanifestedShipments: async (body: GetUnmanifestedShipmentsRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            assertParamExists('getUnmanifestedShipments', 'body', body)
            const localVarPath = `/shipping/v2/unmanifestedShipments`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (xAmznShippingBusinessId !== undefined && xAmznShippingBusinessId !== null) {
                localVarHeaderParameter['x-amzn-shipping-business-id'] = String(xAmznShippingBusinessId);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API associates/links the specified carrier account with the merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} carrierId The unique identifier associated with the carrier account.
         * @param {LinkCarrierAccountRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        linkCarrierAccount: async (carrierId: string, body: LinkCarrierAccountRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'carrierId' is not null or undefined
            assertParamExists('linkCarrierAccount', 'carrierId', carrierId)
            // verify required parameter 'body' is not null or undefined
            assertParamExists('linkCarrierAccount', 'body', body)
            const localVarPath = `/shipping/v2/carrierAccounts/{carrierId}`
                .replace(`{${"carrierId"}}`, encodeURIComponent(String(carrierId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (xAmznShippingBusinessId !== undefined && xAmznShippingBusinessId !== null) {
                localVarHeaderParameter['x-amzn-shipping-business-id'] = String(xAmznShippingBusinessId);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Purchases a shipping service identifier and returns purchase-related details and documents.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {OneClickShipmentRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oneClickShipment: async (body: OneClickShipmentRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            assertParamExists('oneClickShipment', 'body', body)
            const localVarPath = `/shipping/v2/oneClickShipment`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (xAmznShippingBusinessId !== undefined && xAmznShippingBusinessId !== null) {
                localVarHeaderParameter['x-amzn-shipping-business-id'] = String(xAmznShippingBusinessId);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Purchases a shipping service and returns purchase related details and documents.  Note: You must complete the purchase within 10 minutes of rate creation by the shipping service provider. If you make the request after the 10 minutes have expired, you will receive an error response with the error code equal to \"TOKEN_EXPIRED\". If you receive this error response, you must get the rates for the shipment again.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {PurchaseShipmentRequest} body 
         * @param {string} [xAmznIdempotencyKey] A unique value which the server uses to recognize subsequent retries of the same request.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        purchaseShipment: async (body: PurchaseShipmentRequest, xAmznIdempotencyKey?: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'body' is not null or undefined
            assertParamExists('purchaseShipment', 'body', body)
            const localVarPath = `/shipping/v2/shipments`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (xAmznIdempotencyKey !== undefined && xAmznIdempotencyKey !== null) {
                localVarHeaderParameter['x-amzn-IdempotencyKey'] = String(xAmznIdempotencyKey);
            }

            if (xAmznShippingBusinessId !== undefined && xAmznShippingBusinessId !== null) {
                localVarHeaderParameter['x-amzn-shipping-business-id'] = String(xAmznShippingBusinessId);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API Unlink the specified carrier account with the merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} carrierId carrier Id to unlink with merchant.
         * @param {UnlinkCarrierAccountRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        unlinkCarrierAccount: async (carrierId: string, body: UnlinkCarrierAccountRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'carrierId' is not null or undefined
            assertParamExists('unlinkCarrierAccount', 'carrierId', carrierId)
            // verify required parameter 'body' is not null or undefined
            assertParamExists('unlinkCarrierAccount', 'body', body)
            const localVarPath = `/shipping/v2/carrierAccounts/{carrierId}/unlink`
                .replace(`{${"carrierId"}}`, encodeURIComponent(String(carrierId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (xAmznShippingBusinessId !== undefined && xAmznShippingBusinessId !== null) {
                localVarHeaderParameter['x-amzn-shipping-business-id'] = String(xAmznShippingBusinessId);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(body, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ShippingApi - functional programming interface
 * @export
 */
export const ShippingApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = ShippingApiAxiosParamCreator(configuration)
    return {
        /**
         * Cancels a purchased shipment. Returns an empty object if the shipment is successfully cancelled.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} shipmentId The shipment identifier originally returned by the purchaseShipment operation.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async cancelShipment(shipmentId: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CancelShipmentResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.cancelShipment(shipmentId, xAmznShippingBusinessId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Purchases the shipping service for a shipment using the best fit service offering. Returns purchase related details and documents.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {DirectPurchaseRequest} body 
         * @param {string} [xAmznIdempotencyKey] A unique value which the server uses to recognize subsequent retries of the same request.
         * @param {string} [locale] The IETF Language Tag. Note that this only supports the primary language subtag with one secondary language subtag (i.e. en-US, fr-CA). The secondary language subtag is almost always a regional designation. This does not support additional subtags beyond the primary and secondary language subtags. 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async directPurchaseShipment(body: DirectPurchaseRequest, xAmznIdempotencyKey?: string, locale?: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DirectPurchaseResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.directPurchaseShipment(body, xAmznIdempotencyKey, locale, xAmznShippingBusinessId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * This API  Call to generate the collection form.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GenerateCollectionFormRequest} body 
         * @param {string} [xAmznIdempotencyKey] A unique value which the server uses to recognize subsequent retries of the same request.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async generateCollectionForm(body: GenerateCollectionFormRequest, xAmznIdempotencyKey?: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GenerateCollectionFormResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.generateCollectionForm(body, xAmznIdempotencyKey, xAmznShippingBusinessId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns a list of access points in proximity of input postal code.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {Array<'HELIX' | 'CAMPUS_LOCKER' | 'OMNI_LOCKER' | 'ODIN_LOCKER' | 'DOBBY_LOCKER' | 'CORE_LOCKER' | '3P' | 'CAMPUS_ROOM'>} accessPointTypes 
         * @param {string} countryCode 
         * @param {string} postalCode 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getAccessPoints(accessPointTypes: Array<'HELIX' | 'CAMPUS_LOCKER' | 'OMNI_LOCKER' | 'ODIN_LOCKER' | 'DOBBY_LOCKER' | 'CORE_LOCKER' | '3P' | 'CAMPUS_ROOM'>, countryCode: string, postalCode: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetAccessPointsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getAccessPoints(accessPointTypes, countryCode, postalCode, xAmznShippingBusinessId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns the JSON schema to use for providing additional inputs when needed to purchase a shipping offering. Call the getAdditionalInputs operation when the response to a previous call to the getRates operation indicates that additional inputs are required for the rate (shipping offering) that you want to purchase.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} requestToken The request token returned in the response to the getRates operation.
         * @param {string} rateId The rate identifier for the shipping offering (rate) returned in the response to the getRates operation.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getAdditionalInputs(requestToken: string, rateId: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetAdditionalInputsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getAdditionalInputs(requestToken, rateId, xAmznShippingBusinessId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * This API will return a list of input schema required to register a shipper account with the carrier.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCarrierAccountFormInputs(xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCarrierAccountFormInputsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCarrierAccountFormInputs(xAmznShippingBusinessId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * This API will return Get all carrier accounts for a merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GetCarrierAccountsRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCarrierAccounts(body: GetCarrierAccountsRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCarrierAccountsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCarrierAccounts(body, xAmznShippingBusinessId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * This API reprint a collection form.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} collectionFormId collection form Id to reprint a collection.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCollectionForm(collectionFormId: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCollectionFormResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCollectionForm(collectionFormId, xAmznShippingBusinessId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * This API Call to get the history of the previously generated collection forms.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GetCollectionFormHistoryRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCollectionFormHistory(body: GetCollectionFormHistoryRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCollectionFormHistoryResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCollectionFormHistory(body, xAmznShippingBusinessId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns the available shipping service offerings.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GetRatesRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getRates(body: GetRatesRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetRatesResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getRates(body, xAmznShippingBusinessId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns the shipping documents associated with a package in a shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} shipmentId The shipment identifier originally returned by the purchaseShipment operation.
         * @param {string} packageClientReferenceId The package client reference identifier originally provided in the request body parameter for the getRates operation.
         * @param {string} [format] The file format of the document. Must be one of the supported formats returned by the getRates operation.
         * @param {number} [dpi] The resolution of the document (for example, 300 means 300 dots per inch). Must be one of the supported resolutions returned in the response to the getRates operation.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getShipmentDocuments(shipmentId: string, packageClientReferenceId: string, format?: string, dpi?: number, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetShipmentDocumentsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getShipmentDocuments(shipmentId, packageClientReferenceId, format, dpi, xAmznShippingBusinessId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns tracking information for a purchased shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} trackingId A carrier-generated tracking identifier originally returned by the purchaseShipment operation.
         * @param {string} carrierId A carrier identifier originally returned by the getRates operation for the selected rate.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getTracking(trackingId: string, carrierId: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetTrackingResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getTracking(trackingId, carrierId, xAmznShippingBusinessId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * This API Get all unmanifested carriers with shipment locations. Any locations which has unmanifested shipments         with an eligible carrier for manifesting shall be returned.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GetUnmanifestedShipmentsRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getUnmanifestedShipments(body: GetUnmanifestedShipmentsRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetUnmanifestedShipmentsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getUnmanifestedShipments(body, xAmznShippingBusinessId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * This API associates/links the specified carrier account with the merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} carrierId The unique identifier associated with the carrier account.
         * @param {LinkCarrierAccountRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async linkCarrierAccount(carrierId: string, body: LinkCarrierAccountRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<LinkCarrierAccountResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.linkCarrierAccount(carrierId, body, xAmznShippingBusinessId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Purchases a shipping service identifier and returns purchase-related details and documents.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {OneClickShipmentRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async oneClickShipment(body: OneClickShipmentRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OneClickShipmentResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.oneClickShipment(body, xAmznShippingBusinessId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Purchases a shipping service and returns purchase related details and documents.  Note: You must complete the purchase within 10 minutes of rate creation by the shipping service provider. If you make the request after the 10 minutes have expired, you will receive an error response with the error code equal to \"TOKEN_EXPIRED\". If you receive this error response, you must get the rates for the shipment again.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {PurchaseShipmentRequest} body 
         * @param {string} [xAmznIdempotencyKey] A unique value which the server uses to recognize subsequent retries of the same request.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async purchaseShipment(body: PurchaseShipmentRequest, xAmznIdempotencyKey?: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PurchaseShipmentResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.purchaseShipment(body, xAmznIdempotencyKey, xAmznShippingBusinessId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * This API Unlink the specified carrier account with the merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} carrierId carrier Id to unlink with merchant.
         * @param {UnlinkCarrierAccountRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async unlinkCarrierAccount(carrierId: string, body: UnlinkCarrierAccountRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UnlinkCarrierAccountResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.unlinkCarrierAccount(carrierId, body, xAmznShippingBusinessId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * ShippingApi - factory interface
 * @export
 */
export const ShippingApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = ShippingApiFp(configuration)
    return {
        /**
         * Cancels a purchased shipment. Returns an empty object if the shipment is successfully cancelled.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} shipmentId The shipment identifier originally returned by the purchaseShipment operation.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        cancelShipment(shipmentId: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): AxiosPromise<CancelShipmentResponse> {
            return localVarFp.cancelShipment(shipmentId, xAmznShippingBusinessId, options).then((request) => request(axios, basePath));
        },
        /**
         * Purchases the shipping service for a shipment using the best fit service offering. Returns purchase related details and documents.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {DirectPurchaseRequest} body 
         * @param {string} [xAmznIdempotencyKey] A unique value which the server uses to recognize subsequent retries of the same request.
         * @param {string} [locale] The IETF Language Tag. Note that this only supports the primary language subtag with one secondary language subtag (i.e. en-US, fr-CA). The secondary language subtag is almost always a regional designation. This does not support additional subtags beyond the primary and secondary language subtags. 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        directPurchaseShipment(body: DirectPurchaseRequest, xAmznIdempotencyKey?: string, locale?: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): AxiosPromise<DirectPurchaseResponse> {
            return localVarFp.directPurchaseShipment(body, xAmznIdempotencyKey, locale, xAmznShippingBusinessId, options).then((request) => request(axios, basePath));
        },
        /**
         * This API  Call to generate the collection form.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GenerateCollectionFormRequest} body 
         * @param {string} [xAmznIdempotencyKey] A unique value which the server uses to recognize subsequent retries of the same request.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        generateCollectionForm(body: GenerateCollectionFormRequest, xAmznIdempotencyKey?: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): AxiosPromise<GenerateCollectionFormResponse> {
            return localVarFp.generateCollectionForm(body, xAmznIdempotencyKey, xAmznShippingBusinessId, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns a list of access points in proximity of input postal code.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {Array<'HELIX' | 'CAMPUS_LOCKER' | 'OMNI_LOCKER' | 'ODIN_LOCKER' | 'DOBBY_LOCKER' | 'CORE_LOCKER' | '3P' | 'CAMPUS_ROOM'>} accessPointTypes 
         * @param {string} countryCode 
         * @param {string} postalCode 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAccessPoints(accessPointTypes: Array<'HELIX' | 'CAMPUS_LOCKER' | 'OMNI_LOCKER' | 'ODIN_LOCKER' | 'DOBBY_LOCKER' | 'CORE_LOCKER' | '3P' | 'CAMPUS_ROOM'>, countryCode: string, postalCode: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): AxiosPromise<GetAccessPointsResponse> {
            return localVarFp.getAccessPoints(accessPointTypes, countryCode, postalCode, xAmznShippingBusinessId, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns the JSON schema to use for providing additional inputs when needed to purchase a shipping offering. Call the getAdditionalInputs operation when the response to a previous call to the getRates operation indicates that additional inputs are required for the rate (shipping offering) that you want to purchase.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} requestToken The request token returned in the response to the getRates operation.
         * @param {string} rateId The rate identifier for the shipping offering (rate) returned in the response to the getRates operation.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getAdditionalInputs(requestToken: string, rateId: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): AxiosPromise<GetAdditionalInputsResponse> {
            return localVarFp.getAdditionalInputs(requestToken, rateId, xAmznShippingBusinessId, options).then((request) => request(axios, basePath));
        },
        /**
         * This API will return a list of input schema required to register a shipper account with the carrier.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCarrierAccountFormInputs(xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): AxiosPromise<GetCarrierAccountFormInputsResponse> {
            return localVarFp.getCarrierAccountFormInputs(xAmznShippingBusinessId, options).then((request) => request(axios, basePath));
        },
        /**
         * This API will return Get all carrier accounts for a merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GetCarrierAccountsRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCarrierAccounts(body: GetCarrierAccountsRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): AxiosPromise<GetCarrierAccountsResponse> {
            return localVarFp.getCarrierAccounts(body, xAmznShippingBusinessId, options).then((request) => request(axios, basePath));
        },
        /**
         * This API reprint a collection form.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} collectionFormId collection form Id to reprint a collection.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCollectionForm(collectionFormId: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): AxiosPromise<GetCollectionFormResponse> {
            return localVarFp.getCollectionForm(collectionFormId, xAmznShippingBusinessId, options).then((request) => request(axios, basePath));
        },
        /**
         * This API Call to get the history of the previously generated collection forms.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GetCollectionFormHistoryRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCollectionFormHistory(body: GetCollectionFormHistoryRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): AxiosPromise<GetCollectionFormHistoryResponse> {
            return localVarFp.getCollectionFormHistory(body, xAmznShippingBusinessId, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns the available shipping service offerings.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GetRatesRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRates(body: GetRatesRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): AxiosPromise<GetRatesResponse> {
            return localVarFp.getRates(body, xAmznShippingBusinessId, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns the shipping documents associated with a package in a shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} shipmentId The shipment identifier originally returned by the purchaseShipment operation.
         * @param {string} packageClientReferenceId The package client reference identifier originally provided in the request body parameter for the getRates operation.
         * @param {string} [format] The file format of the document. Must be one of the supported formats returned by the getRates operation.
         * @param {number} [dpi] The resolution of the document (for example, 300 means 300 dots per inch). Must be one of the supported resolutions returned in the response to the getRates operation.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getShipmentDocuments(shipmentId: string, packageClientReferenceId: string, format?: string, dpi?: number, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): AxiosPromise<GetShipmentDocumentsResponse> {
            return localVarFp.getShipmentDocuments(shipmentId, packageClientReferenceId, format, dpi, xAmznShippingBusinessId, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns tracking information for a purchased shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} trackingId A carrier-generated tracking identifier originally returned by the purchaseShipment operation.
         * @param {string} carrierId A carrier identifier originally returned by the getRates operation for the selected rate.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTracking(trackingId: string, carrierId: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): AxiosPromise<GetTrackingResponse> {
            return localVarFp.getTracking(trackingId, carrierId, xAmznShippingBusinessId, options).then((request) => request(axios, basePath));
        },
        /**
         * This API Get all unmanifested carriers with shipment locations. Any locations which has unmanifested shipments         with an eligible carrier for manifesting shall be returned.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GetUnmanifestedShipmentsRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getUnmanifestedShipments(body: GetUnmanifestedShipmentsRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): AxiosPromise<GetUnmanifestedShipmentsResponse> {
            return localVarFp.getUnmanifestedShipments(body, xAmznShippingBusinessId, options).then((request) => request(axios, basePath));
        },
        /**
         * This API associates/links the specified carrier account with the merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} carrierId The unique identifier associated with the carrier account.
         * @param {LinkCarrierAccountRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        linkCarrierAccount(carrierId: string, body: LinkCarrierAccountRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): AxiosPromise<LinkCarrierAccountResponse> {
            return localVarFp.linkCarrierAccount(carrierId, body, xAmznShippingBusinessId, options).then((request) => request(axios, basePath));
        },
        /**
         * Purchases a shipping service identifier and returns purchase-related details and documents.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {OneClickShipmentRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        oneClickShipment(body: OneClickShipmentRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): AxiosPromise<OneClickShipmentResponse> {
            return localVarFp.oneClickShipment(body, xAmznShippingBusinessId, options).then((request) => request(axios, basePath));
        },
        /**
         * Purchases a shipping service and returns purchase related details and documents.  Note: You must complete the purchase within 10 minutes of rate creation by the shipping service provider. If you make the request after the 10 minutes have expired, you will receive an error response with the error code equal to \"TOKEN_EXPIRED\". If you receive this error response, you must get the rates for the shipment again.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {PurchaseShipmentRequest} body 
         * @param {string} [xAmznIdempotencyKey] A unique value which the server uses to recognize subsequent retries of the same request.
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        purchaseShipment(body: PurchaseShipmentRequest, xAmznIdempotencyKey?: string, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): AxiosPromise<PurchaseShipmentResponse> {
            return localVarFp.purchaseShipment(body, xAmznIdempotencyKey, xAmznShippingBusinessId, options).then((request) => request(axios, basePath));
        },
        /**
         * This API Unlink the specified carrier account with the merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} carrierId carrier Id to unlink with merchant.
         * @param {UnlinkCarrierAccountRequest} body 
         * @param {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'} [xAmznShippingBusinessId] Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        unlinkCarrierAccount(carrierId: string, body: UnlinkCarrierAccountRequest, xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP', options?: any): AxiosPromise<UnlinkCarrierAccountResponse> {
            return localVarFp.unlinkCarrierAccount(carrierId, body, xAmznShippingBusinessId, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for cancelShipment operation in ShippingApi.
 * @export
 * @interface ShippingApiCancelShipmentRequest
 */
export interface ShippingApiCancelShipmentRequest {
    /**
     * The shipment identifier originally returned by the purchaseShipment operation.
     * @type {string}
     * @memberof ShippingApiCancelShipment
     */
    readonly shipmentId: string

    /**
     * Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
     * @type {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'}
     * @memberof ShippingApiCancelShipment
     */
    readonly xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'
}

/**
 * Request parameters for directPurchaseShipment operation in ShippingApi.
 * @export
 * @interface ShippingApiDirectPurchaseShipmentRequest
 */
export interface ShippingApiDirectPurchaseShipmentRequest {
    /**
     * 
     * @type {DirectPurchaseRequest}
     * @memberof ShippingApiDirectPurchaseShipment
     */
    readonly body: DirectPurchaseRequest

    /**
     * A unique value which the server uses to recognize subsequent retries of the same request.
     * @type {string}
     * @memberof ShippingApiDirectPurchaseShipment
     */
    readonly xAmznIdempotencyKey?: string

    /**
     * The IETF Language Tag. Note that this only supports the primary language subtag with one secondary language subtag (i.e. en-US, fr-CA). The secondary language subtag is almost always a regional designation. This does not support additional subtags beyond the primary and secondary language subtags. 
     * @type {string}
     * @memberof ShippingApiDirectPurchaseShipment
     */
    readonly locale?: string

    /**
     * Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
     * @type {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'}
     * @memberof ShippingApiDirectPurchaseShipment
     */
    readonly xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'
}

/**
 * Request parameters for generateCollectionForm operation in ShippingApi.
 * @export
 * @interface ShippingApiGenerateCollectionFormRequest
 */
export interface ShippingApiGenerateCollectionFormRequest {
    /**
     * 
     * @type {GenerateCollectionFormRequest}
     * @memberof ShippingApiGenerateCollectionForm
     */
    readonly body: GenerateCollectionFormRequest

    /**
     * A unique value which the server uses to recognize subsequent retries of the same request.
     * @type {string}
     * @memberof ShippingApiGenerateCollectionForm
     */
    readonly xAmznIdempotencyKey?: string

    /**
     * Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
     * @type {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'}
     * @memberof ShippingApiGenerateCollectionForm
     */
    readonly xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'
}

/**
 * Request parameters for getAccessPoints operation in ShippingApi.
 * @export
 * @interface ShippingApiGetAccessPointsRequest
 */
export interface ShippingApiGetAccessPointsRequest {
    /**
     * 
     * @type {Array<'HELIX' | 'CAMPUS_LOCKER' | 'OMNI_LOCKER' | 'ODIN_LOCKER' | 'DOBBY_LOCKER' | 'CORE_LOCKER' | '3P' | 'CAMPUS_ROOM'>}
     * @memberof ShippingApiGetAccessPoints
     */
    readonly accessPointTypes: Array<'HELIX' | 'CAMPUS_LOCKER' | 'OMNI_LOCKER' | 'ODIN_LOCKER' | 'DOBBY_LOCKER' | 'CORE_LOCKER' | '3P' | 'CAMPUS_ROOM'>

    /**
     * 
     * @type {string}
     * @memberof ShippingApiGetAccessPoints
     */
    readonly countryCode: string

    /**
     * 
     * @type {string}
     * @memberof ShippingApiGetAccessPoints
     */
    readonly postalCode: string

    /**
     * Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
     * @type {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'}
     * @memberof ShippingApiGetAccessPoints
     */
    readonly xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'
}

/**
 * Request parameters for getAdditionalInputs operation in ShippingApi.
 * @export
 * @interface ShippingApiGetAdditionalInputsRequest
 */
export interface ShippingApiGetAdditionalInputsRequest {
    /**
     * The request token returned in the response to the getRates operation.
     * @type {string}
     * @memberof ShippingApiGetAdditionalInputs
     */
    readonly requestToken: string

    /**
     * The rate identifier for the shipping offering (rate) returned in the response to the getRates operation.
     * @type {string}
     * @memberof ShippingApiGetAdditionalInputs
     */
    readonly rateId: string

    /**
     * Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
     * @type {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'}
     * @memberof ShippingApiGetAdditionalInputs
     */
    readonly xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'
}

/**
 * Request parameters for getCarrierAccountFormInputs operation in ShippingApi.
 * @export
 * @interface ShippingApiGetCarrierAccountFormInputsRequest
 */
export interface ShippingApiGetCarrierAccountFormInputsRequest {
    /**
     * Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
     * @type {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'}
     * @memberof ShippingApiGetCarrierAccountFormInputs
     */
    readonly xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'
}

/**
 * Request parameters for getCarrierAccounts operation in ShippingApi.
 * @export
 * @interface ShippingApiGetCarrierAccountsRequest
 */
export interface ShippingApiGetCarrierAccountsRequest {
    /**
     * 
     * @type {GetCarrierAccountsRequest}
     * @memberof ShippingApiGetCarrierAccounts
     */
    readonly body: GetCarrierAccountsRequest

    /**
     * Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
     * @type {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'}
     * @memberof ShippingApiGetCarrierAccounts
     */
    readonly xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'
}

/**
 * Request parameters for getCollectionForm operation in ShippingApi.
 * @export
 * @interface ShippingApiGetCollectionFormRequest
 */
export interface ShippingApiGetCollectionFormRequest {
    /**
     * collection form Id to reprint a collection.
     * @type {string}
     * @memberof ShippingApiGetCollectionForm
     */
    readonly collectionFormId: string

    /**
     * Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
     * @type {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'}
     * @memberof ShippingApiGetCollectionForm
     */
    readonly xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'
}

/**
 * Request parameters for getCollectionFormHistory operation in ShippingApi.
 * @export
 * @interface ShippingApiGetCollectionFormHistoryRequest
 */
export interface ShippingApiGetCollectionFormHistoryRequest {
    /**
     * 
     * @type {GetCollectionFormHistoryRequest}
     * @memberof ShippingApiGetCollectionFormHistory
     */
    readonly body: GetCollectionFormHistoryRequest

    /**
     * Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
     * @type {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'}
     * @memberof ShippingApiGetCollectionFormHistory
     */
    readonly xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'
}

/**
 * Request parameters for getRates operation in ShippingApi.
 * @export
 * @interface ShippingApiGetRatesRequest
 */
export interface ShippingApiGetRatesRequest {
    /**
     * 
     * @type {GetRatesRequest}
     * @memberof ShippingApiGetRates
     */
    readonly body: GetRatesRequest

    /**
     * Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
     * @type {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'}
     * @memberof ShippingApiGetRates
     */
    readonly xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'
}

/**
 * Request parameters for getShipmentDocuments operation in ShippingApi.
 * @export
 * @interface ShippingApiGetShipmentDocumentsRequest
 */
export interface ShippingApiGetShipmentDocumentsRequest {
    /**
     * The shipment identifier originally returned by the purchaseShipment operation.
     * @type {string}
     * @memberof ShippingApiGetShipmentDocuments
     */
    readonly shipmentId: string

    /**
     * The package client reference identifier originally provided in the request body parameter for the getRates operation.
     * @type {string}
     * @memberof ShippingApiGetShipmentDocuments
     */
    readonly packageClientReferenceId: string

    /**
     * The file format of the document. Must be one of the supported formats returned by the getRates operation.
     * @type {string}
     * @memberof ShippingApiGetShipmentDocuments
     */
    readonly format?: string

    /**
     * The resolution of the document (for example, 300 means 300 dots per inch). Must be one of the supported resolutions returned in the response to the getRates operation.
     * @type {number}
     * @memberof ShippingApiGetShipmentDocuments
     */
    readonly dpi?: number

    /**
     * Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
     * @type {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'}
     * @memberof ShippingApiGetShipmentDocuments
     */
    readonly xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'
}

/**
 * Request parameters for getTracking operation in ShippingApi.
 * @export
 * @interface ShippingApiGetTrackingRequest
 */
export interface ShippingApiGetTrackingRequest {
    /**
     * A carrier-generated tracking identifier originally returned by the purchaseShipment operation.
     * @type {string}
     * @memberof ShippingApiGetTracking
     */
    readonly trackingId: string

    /**
     * A carrier identifier originally returned by the getRates operation for the selected rate.
     * @type {string}
     * @memberof ShippingApiGetTracking
     */
    readonly carrierId: string

    /**
     * Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
     * @type {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'}
     * @memberof ShippingApiGetTracking
     */
    readonly xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'
}

/**
 * Request parameters for getUnmanifestedShipments operation in ShippingApi.
 * @export
 * @interface ShippingApiGetUnmanifestedShipmentsRequest
 */
export interface ShippingApiGetUnmanifestedShipmentsRequest {
    /**
     * 
     * @type {GetUnmanifestedShipmentsRequest}
     * @memberof ShippingApiGetUnmanifestedShipments
     */
    readonly body: GetUnmanifestedShipmentsRequest

    /**
     * Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
     * @type {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'}
     * @memberof ShippingApiGetUnmanifestedShipments
     */
    readonly xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'
}

/**
 * Request parameters for linkCarrierAccount operation in ShippingApi.
 * @export
 * @interface ShippingApiLinkCarrierAccountRequest
 */
export interface ShippingApiLinkCarrierAccountRequest {
    /**
     * The unique identifier associated with the carrier account.
     * @type {string}
     * @memberof ShippingApiLinkCarrierAccount
     */
    readonly carrierId: string

    /**
     * 
     * @type {LinkCarrierAccountRequest}
     * @memberof ShippingApiLinkCarrierAccount
     */
    readonly body: LinkCarrierAccountRequest

    /**
     * Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
     * @type {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'}
     * @memberof ShippingApiLinkCarrierAccount
     */
    readonly xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'
}

/**
 * Request parameters for oneClickShipment operation in ShippingApi.
 * @export
 * @interface ShippingApiOneClickShipmentRequest
 */
export interface ShippingApiOneClickShipmentRequest {
    /**
     * 
     * @type {OneClickShipmentRequest}
     * @memberof ShippingApiOneClickShipment
     */
    readonly body: OneClickShipmentRequest

    /**
     * Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
     * @type {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'}
     * @memberof ShippingApiOneClickShipment
     */
    readonly xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'
}

/**
 * Request parameters for purchaseShipment operation in ShippingApi.
 * @export
 * @interface ShippingApiPurchaseShipmentRequest
 */
export interface ShippingApiPurchaseShipmentRequest {
    /**
     * 
     * @type {PurchaseShipmentRequest}
     * @memberof ShippingApiPurchaseShipment
     */
    readonly body: PurchaseShipmentRequest

    /**
     * A unique value which the server uses to recognize subsequent retries of the same request.
     * @type {string}
     * @memberof ShippingApiPurchaseShipment
     */
    readonly xAmznIdempotencyKey?: string

    /**
     * Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
     * @type {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'}
     * @memberof ShippingApiPurchaseShipment
     */
    readonly xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'
}

/**
 * Request parameters for unlinkCarrierAccount operation in ShippingApi.
 * @export
 * @interface ShippingApiUnlinkCarrierAccountRequest
 */
export interface ShippingApiUnlinkCarrierAccountRequest {
    /**
     * carrier Id to unlink with merchant.
     * @type {string}
     * @memberof ShippingApiUnlinkCarrierAccount
     */
    readonly carrierId: string

    /**
     * 
     * @type {UnlinkCarrierAccountRequest}
     * @memberof ShippingApiUnlinkCarrierAccount
     */
    readonly body: UnlinkCarrierAccountRequest

    /**
     * Amazon shipping business to assume for this request. The default is AmazonShipping_UK.
     * @type {'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'}
     * @memberof ShippingApiUnlinkCarrierAccount
     */
    readonly xAmznShippingBusinessId?: 'AmazonShipping_US' | 'AmazonShipping_IN' | 'AmazonShipping_UK' | 'AmazonShipping_UAE' | 'AmazonShipping_SA' | 'AmazonShipping_EG' | 'AmazonShipping_IT' | 'AmazonShipping_ES' | 'AmazonShipping_FR' | 'AmazonShipping_JP'
}

/**
 * ShippingApi - object-oriented interface
 * @export
 * @class ShippingApi
 * @extends {BaseAPI}
 */
export class ShippingApi extends BaseAPI {
    /**
     * Cancels a purchased shipment. Returns an empty object if the shipment is successfully cancelled.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShippingApiCancelShipmentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShippingApi
     */
    public cancelShipment(requestParameters: ShippingApiCancelShipmentRequest, options?: any) {
        return ShippingApiFp(this.configuration).cancelShipment(requestParameters.shipmentId, requestParameters.xAmznShippingBusinessId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Purchases the shipping service for a shipment using the best fit service offering. Returns purchase related details and documents.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShippingApiDirectPurchaseShipmentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShippingApi
     */
    public directPurchaseShipment(requestParameters: ShippingApiDirectPurchaseShipmentRequest, options?: any) {
        return ShippingApiFp(this.configuration).directPurchaseShipment(requestParameters.body, requestParameters.xAmznIdempotencyKey, requestParameters.locale, requestParameters.xAmznShippingBusinessId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API  Call to generate the collection form.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShippingApiGenerateCollectionFormRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShippingApi
     */
    public generateCollectionForm(requestParameters: ShippingApiGenerateCollectionFormRequest, options?: any) {
        return ShippingApiFp(this.configuration).generateCollectionForm(requestParameters.body, requestParameters.xAmznIdempotencyKey, requestParameters.xAmznShippingBusinessId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns a list of access points in proximity of input postal code.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShippingApiGetAccessPointsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShippingApi
     */
    public getAccessPoints(requestParameters: ShippingApiGetAccessPointsRequest, options?: any) {
        return ShippingApiFp(this.configuration).getAccessPoints(requestParameters.accessPointTypes, requestParameters.countryCode, requestParameters.postalCode, requestParameters.xAmznShippingBusinessId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns the JSON schema to use for providing additional inputs when needed to purchase a shipping offering. Call the getAdditionalInputs operation when the response to a previous call to the getRates operation indicates that additional inputs are required for the rate (shipping offering) that you want to purchase.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShippingApiGetAdditionalInputsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShippingApi
     */
    public getAdditionalInputs(requestParameters: ShippingApiGetAdditionalInputsRequest, options?: any) {
        return ShippingApiFp(this.configuration).getAdditionalInputs(requestParameters.requestToken, requestParameters.rateId, requestParameters.xAmznShippingBusinessId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API will return a list of input schema required to register a shipper account with the carrier.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShippingApiGetCarrierAccountFormInputsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShippingApi
     */
    public getCarrierAccountFormInputs(requestParameters: ShippingApiGetCarrierAccountFormInputsRequest = {}, options?: any) {
        return ShippingApiFp(this.configuration).getCarrierAccountFormInputs(requestParameters.xAmznShippingBusinessId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API will return Get all carrier accounts for a merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShippingApiGetCarrierAccountsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShippingApi
     */
    public getCarrierAccounts(requestParameters: ShippingApiGetCarrierAccountsRequest, options?: any) {
        return ShippingApiFp(this.configuration).getCarrierAccounts(requestParameters.body, requestParameters.xAmznShippingBusinessId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API reprint a collection form.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShippingApiGetCollectionFormRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShippingApi
     */
    public getCollectionForm(requestParameters: ShippingApiGetCollectionFormRequest, options?: any) {
        return ShippingApiFp(this.configuration).getCollectionForm(requestParameters.collectionFormId, requestParameters.xAmznShippingBusinessId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API Call to get the history of the previously generated collection forms.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShippingApiGetCollectionFormHistoryRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShippingApi
     */
    public getCollectionFormHistory(requestParameters: ShippingApiGetCollectionFormHistoryRequest, options?: any) {
        return ShippingApiFp(this.configuration).getCollectionFormHistory(requestParameters.body, requestParameters.xAmznShippingBusinessId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns the available shipping service offerings.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShippingApiGetRatesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShippingApi
     */
    public getRates(requestParameters: ShippingApiGetRatesRequest, options?: any) {
        return ShippingApiFp(this.configuration).getRates(requestParameters.body, requestParameters.xAmznShippingBusinessId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns the shipping documents associated with a package in a shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShippingApiGetShipmentDocumentsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShippingApi
     */
    public getShipmentDocuments(requestParameters: ShippingApiGetShipmentDocumentsRequest, options?: any) {
        return ShippingApiFp(this.configuration).getShipmentDocuments(requestParameters.shipmentId, requestParameters.packageClientReferenceId, requestParameters.format, requestParameters.dpi, requestParameters.xAmznShippingBusinessId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns tracking information for a purchased shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShippingApiGetTrackingRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShippingApi
     */
    public getTracking(requestParameters: ShippingApiGetTrackingRequest, options?: any) {
        return ShippingApiFp(this.configuration).getTracking(requestParameters.trackingId, requestParameters.carrierId, requestParameters.xAmznShippingBusinessId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API Get all unmanifested carriers with shipment locations. Any locations which has unmanifested shipments         with an eligible carrier for manifesting shall be returned.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShippingApiGetUnmanifestedShipmentsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShippingApi
     */
    public getUnmanifestedShipments(requestParameters: ShippingApiGetUnmanifestedShipmentsRequest, options?: any) {
        return ShippingApiFp(this.configuration).getUnmanifestedShipments(requestParameters.body, requestParameters.xAmznShippingBusinessId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API associates/links the specified carrier account with the merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShippingApiLinkCarrierAccountRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShippingApi
     */
    public linkCarrierAccount(requestParameters: ShippingApiLinkCarrierAccountRequest, options?: any) {
        return ShippingApiFp(this.configuration).linkCarrierAccount(requestParameters.carrierId, requestParameters.body, requestParameters.xAmznShippingBusinessId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Purchases a shipping service identifier and returns purchase-related details and documents.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShippingApiOneClickShipmentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShippingApi
     */
    public oneClickShipment(requestParameters: ShippingApiOneClickShipmentRequest, options?: any) {
        return ShippingApiFp(this.configuration).oneClickShipment(requestParameters.body, requestParameters.xAmznShippingBusinessId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Purchases a shipping service and returns purchase related details and documents.  Note: You must complete the purchase within 10 minutes of rate creation by the shipping service provider. If you make the request after the 10 minutes have expired, you will receive an error response with the error code equal to \"TOKEN_EXPIRED\". If you receive this error response, you must get the rates for the shipment again.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShippingApiPurchaseShipmentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShippingApi
     */
    public purchaseShipment(requestParameters: ShippingApiPurchaseShipmentRequest, options?: any) {
        return ShippingApiFp(this.configuration).purchaseShipment(requestParameters.body, requestParameters.xAmznIdempotencyKey, requestParameters.xAmznShippingBusinessId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API Unlink the specified carrier account with the merchant.   **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 80 | 100 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ShippingApiUnlinkCarrierAccountRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShippingApi
     */
    public unlinkCarrierAccount(requestParameters: ShippingApiUnlinkCarrierAccountRequest, options?: any) {
        return ShippingApiFp(this.configuration).unlinkCarrierAccount(requestParameters.carrierId, requestParameters.body, requestParameters.xAmznShippingBusinessId, options).then((request) => request(this.axios, this.basePath));
    }
}


