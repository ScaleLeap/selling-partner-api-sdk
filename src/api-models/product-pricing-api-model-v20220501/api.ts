/* tslint:disable */
/* eslint-disable */
/**
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer pricing information for Amazon Marketplace products.  For more information, refer to the [Product Pricing v2022-05-01 Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/product-pricing-api-v2022-05-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2022-05-01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { Configuration } from './configuration';
import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';

/**
 * The common properties for individual requests within a batch.
 * @export
 * @interface BatchRequest
 */
export interface BatchRequest {
    /**
     * The URI associated with an individual request within a batch. For `FeaturedOfferExpectedPrice`, this should be `/products/pricing/2022-05-01/offer/featuredOfferExpectedPrice`.
     * @type {string}
     * @memberof BatchRequest
     */
    uri: string;
    /**
     * 
     * @type {HttpMethod}
     * @memberof BatchRequest
     */
    method: HttpMethod | 'GET' | 'PUT' | 'PATCH' | 'DELETE' | 'POST';
    /**
     * Additional HTTP body information associated with an individual request within a batch.
     * @type {{ [key: string]: object; }}
     * @memberof BatchRequest
     */
    body?: { [key: string]: object; };
    /**
     * A mapping of additional HTTP headers to send/receive for an individual request within a batch.
     * @type {{ [key: string]: string; }}
     * @memberof BatchRequest
     */
    headers?: { [key: string]: string; };
}
/**
 * The common properties for responses to individual requests within a batch.
 * @export
 * @interface BatchResponse
 */
export interface BatchResponse {
    /**
     * A mapping of additional HTTP headers to send/receive for an individual request within a batch.
     * @type {{ [key: string]: string; }}
     * @memberof BatchResponse
     */
    headers: { [key: string]: string; };
    /**
     * 
     * @type {HttpStatusLine}
     * @memberof BatchResponse
     */
    status: HttpStatusLine;
}
/**
 * The `competitiveSummary` batch request data.
 * @export
 * @interface CompetitiveSummaryBatchRequest
 */
export interface CompetitiveSummaryBatchRequest {
    /**
     * A batched list of `competitiveSummary` requests.
     * @type {Array<CompetitiveSummaryRequest>}
     * @memberof CompetitiveSummaryBatchRequest
     */
    requests: Array<CompetitiveSummaryRequest>;
}
/**
 * The response schema of the `competitiveSummaryBatch` operation.
 * @export
 * @interface CompetitiveSummaryBatchResponse
 */
export interface CompetitiveSummaryBatchResponse {
    /**
     * The response list of the `competitiveSummaryBatch` operation.
     * @type {Array<CompetitiveSummaryResponse>}
     * @memberof CompetitiveSummaryBatchResponse
     */
    responses: Array<CompetitiveSummaryResponse>;
}
/**
 * The supported types of data in the `getCompetitiveSummary` API.
 * @export
 * @enum {string}
 */
export enum CompetitiveSummaryIncludedData {
    FeaturedBuyingOptions = 'featuredBuyingOptions',
    ReferencePrices = 'referencePrices',
    LowestPricedOffers = 'lowestPricedOffers'
}

/**
 * An individual `competitiveSummary` request for an ASIN and `marketplaceId`.
 * @export
 * @interface CompetitiveSummaryRequest
 */
export interface CompetitiveSummaryRequest {
    /**
     * The Amazon Standard Identification Number (ASIN) of the item.
     * @type {string}
     * @memberof CompetitiveSummaryRequest
     */
    asin: string;
    /**
     * A marketplace identifier. Specifies the marketplace for which data is returned.
     * @type {string}
     * @memberof CompetitiveSummaryRequest
     */
    marketplaceId: string;
    /**
     * The list of requested competitive pricing data for the product.
     * @type {Array<CompetitiveSummaryIncludedData>}
     * @memberof CompetitiveSummaryRequest
     */
    includedData: Array<(CompetitiveSummaryIncludedData | 'featuredBuyingOptions' | 'referencePrices' | 'lowestPricedOffers')>;
    /**
     * The list of `lowestPricedOffersInput` parameters used to build the `lowestPricedOffers` in the response. This attribute is valid only if `lowestPricedOffers` is requested in `includedData`.
     * @type {Array<LowestPricedOffersInput>}
     * @memberof CompetitiveSummaryRequest
     */
    lowestPricedOffersInputs?: Array<LowestPricedOffersInput>;
    /**
     * 
     * @type {HttpMethod}
     * @memberof CompetitiveSummaryRequest
     */
    method: HttpMethod | 'GET' | 'PUT' | 'PATCH' | 'DELETE' | 'POST';
    /**
     * The URI associated with the individual APIs being called as part of the batch request.
     * @type {string}
     * @memberof CompetitiveSummaryRequest
     */
    uri: string;
}
/**
 * The response for the individual `competitiveSummary` request in the batch operation.
 * @export
 * @interface CompetitiveSummaryResponse
 */
export interface CompetitiveSummaryResponse {
    /**
     * 
     * @type {HttpStatusLine}
     * @memberof CompetitiveSummaryResponse
     */
    status: HttpStatusLine;
    /**
     * 
     * @type {CompetitiveSummaryResponseBody}
     * @memberof CompetitiveSummaryResponse
     */
    body: CompetitiveSummaryResponseBody;
}
/**
 * The `competitiveSummaryResponse` body for a requested ASIN and `marketplaceId`.
 * @export
 * @interface CompetitiveSummaryResponseBody
 */
export interface CompetitiveSummaryResponseBody {
    /**
     * The Amazon Standard Identification Number (ASIN) of the item.
     * @type {string}
     * @memberof CompetitiveSummaryResponseBody
     */
    asin: string;
    /**
     * A marketplace identifier. Specifies the marketplace for which data is returned.
     * @type {string}
     * @memberof CompetitiveSummaryResponseBody
     */
    marketplaceId: string;
    /**
     * A list of featured buying options for the given ASIN `marketplaceId` combination.
     * @type {Array<FeaturedBuyingOption>}
     * @memberof CompetitiveSummaryResponseBody
     */
    featuredBuyingOptions?: Array<FeaturedBuyingOption>;
    /**
     * A list of the lowest priced offers for the given ASIN `marketplaceId` combination.
     * @type {Array<LowestPricedOffer>}
     * @memberof CompetitiveSummaryResponseBody
     */
    lowestPricedOffers?: Array<LowestPricedOffer>;
    /**
     * A list of reference prices for the given ASIN `marketplaceId` combination.
     * @type {Array<ReferencePrice>}
     * @memberof CompetitiveSummaryResponseBody
     */
    referencePrices?: Array<ReferencePrice>;
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof CompetitiveSummaryResponseBody
     */
    errors?: Array<Error>;
}
/**
 * The condition of the item.
 * @export
 * @enum {string}
 */
export enum Condition {
    New = 'New',
    Used = 'Used',
    Collectible = 'Collectible',
    Refurbished = 'Refurbished',
    Club = 'Club'
}

/**
 * A list of error responses returned when a request is unsuccessful.
 * @export
 * @interface Errors
 */
export interface Errors {
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof Errors
     */
    errors: Array<Error>;
}
/**
 * Describes a featured buying option which includes a list of segmented featured offers for a particular item condition.
 * @export
 * @interface FeaturedBuyingOption
 */
export interface FeaturedBuyingOption {
    /**
     * The buying option type of the featured offer. This field represents the buying options that a customer sees on the detail page. For example, B2B, Fresh, and Subscribe n Save. Currently supports `NEW`
     * @type {string}
     * @memberof FeaturedBuyingOption
     */
    buyingOptionType: FeaturedBuyingOptionBuyingOptionTypeEnum | 'New';
    /**
     * A list of segmented featured offers for the current buying option type. A segment can be considered as a group of regional contexts that all have the same featured offer. A regional context is a combination of factors such as customer type, region or postal code and buying option.
     * @type {Array<SegmentedFeaturedOffer>}
     * @memberof FeaturedBuyingOption
     */
    segmentedFeaturedOffers: Array<SegmentedFeaturedOffer>;
}

/**
    * @export
    * @enum {string}
    */
export enum FeaturedBuyingOptionBuyingOptionTypeEnum {
    New = 'New'
}

/**
 * Schema for `currentFeaturedOffer` or `competingFeaturedOffer`.
 * @export
 * @interface FeaturedOffer
 */
export interface FeaturedOffer {
    /**
     * 
     * @type {OfferIdentifier}
     * @memberof FeaturedOffer
     */
    offerIdentifier: OfferIdentifier;
    /**
     * 
     * @type {Condition}
     * @memberof FeaturedOffer
     */
    condition?: Condition | 'New' | 'Used' | 'Collectible' | 'Refurbished' | 'Club';
    /**
     * 
     * @type {Price}
     * @memberof FeaturedOffer
     */
    price?: Price;
}
/**
 * The item price at or below which the target offer may be featured.
 * @export
 * @interface FeaturedOfferExpectedPrice
 */
export interface FeaturedOfferExpectedPrice {
    /**
     * 
     * @type {MoneyType}
     * @memberof FeaturedOfferExpectedPrice
     */
    listingPrice: MoneyType;
    /**
     * 
     * @type {Points}
     * @memberof FeaturedOfferExpectedPrice
     */
    points?: Points;
}
/**
 * An individual featured offer expected price request for a particular SKU.
 * @export
 * @interface FeaturedOfferExpectedPriceRequest
 */
export interface FeaturedOfferExpectedPriceRequest {
    /**
     * The URI associated with an individual request within a batch. For `FeaturedOfferExpectedPrice`, this should be `/products/pricing/2022-05-01/offer/featuredOfferExpectedPrice`.
     * @type {string}
     * @memberof FeaturedOfferExpectedPriceRequest
     */
    uri: string;
    /**
     * 
     * @type {HttpMethod}
     * @memberof FeaturedOfferExpectedPriceRequest
     */
    method: HttpMethod | 'GET' | 'PUT' | 'PATCH' | 'DELETE' | 'POST';
    /**
     * Additional HTTP body information associated with an individual request within a batch.
     * @type {{ [key: string]: object; }}
     * @memberof FeaturedOfferExpectedPriceRequest
     */
    body?: { [key: string]: object; };
    /**
     * A mapping of additional HTTP headers to send/receive for an individual request within a batch.
     * @type {{ [key: string]: string; }}
     * @memberof FeaturedOfferExpectedPriceRequest
     */
    headers?: { [key: string]: string; };
    /**
     * A marketplace identifier. Specifies the marketplace for which data is returned.
     * @type {string}
     * @memberof FeaturedOfferExpectedPriceRequest
     */
    marketplaceId: string;
    /**
     * The seller SKU of the item.
     * @type {string}
     * @memberof FeaturedOfferExpectedPriceRequest
     */
    sku: string;
}
/**
 * The parameters for an individual request.
 * @export
 * @interface FeaturedOfferExpectedPriceRequestParams
 */
export interface FeaturedOfferExpectedPriceRequestParams {
    /**
     * A marketplace identifier. Specifies the marketplace for which data is returned.
     * @type {string}
     * @memberof FeaturedOfferExpectedPriceRequestParams
     */
    marketplaceId: string;
    /**
     * The seller SKU of the item.
     * @type {string}
     * @memberof FeaturedOfferExpectedPriceRequestParams
     */
    sku: string;
}
/**
 * Schema for an individual featured offer expected price response.
 * @export
 * @interface FeaturedOfferExpectedPriceResponse
 */
export interface FeaturedOfferExpectedPriceResponse {
    /**
     * A mapping of additional HTTP headers to send/receive for an individual request within a batch.
     * @type {{ [key: string]: string; }}
     * @memberof FeaturedOfferExpectedPriceResponse
     */
    headers: { [key: string]: string; };
    /**
     * 
     * @type {HttpStatusLine}
     * @memberof FeaturedOfferExpectedPriceResponse
     */
    status: HttpStatusLine;
    /**
     * 
     * @type {FeaturedOfferExpectedPriceRequestParams}
     * @memberof FeaturedOfferExpectedPriceResponse
     */
    request: FeaturedOfferExpectedPriceRequestParams;
    /**
     * 
     * @type {FeaturedOfferExpectedPriceResponseBody}
     * @memberof FeaturedOfferExpectedPriceResponse
     */
    body?: FeaturedOfferExpectedPriceResponseBody;
}
/**
 * 
 * @export
 * @interface FeaturedOfferExpectedPriceResponseAllOf
 */
export interface FeaturedOfferExpectedPriceResponseAllOf {
    /**
     * 
     * @type {FeaturedOfferExpectedPriceRequestParams}
     * @memberof FeaturedOfferExpectedPriceResponseAllOf
     */
    request: FeaturedOfferExpectedPriceRequestParams;
    /**
     * 
     * @type {FeaturedOfferExpectedPriceResponseBody}
     * @memberof FeaturedOfferExpectedPriceResponseAllOf
     */
    body?: FeaturedOfferExpectedPriceResponseBody;
}
/**
 * The featured offer expected price response data for a requested SKU.
 * @export
 * @interface FeaturedOfferExpectedPriceResponseBody
 */
export interface FeaturedOfferExpectedPriceResponseBody {
    /**
     * 
     * @type {OfferIdentifier}
     * @memberof FeaturedOfferExpectedPriceResponseBody
     */
    offerIdentifier: OfferIdentifier;
    /**
     * A list of featured offer expected price results for the requested offer.
     * @type {Array<FeaturedOfferExpectedPriceResult>}
     * @memberof FeaturedOfferExpectedPriceResponseBody
     */
    featuredOfferExpectedPriceResults?: Array<FeaturedOfferExpectedPriceResult>;
    /**
     * A list of error responses returned when a request is unsuccessful.
     * @type {Array<Error>}
     * @memberof FeaturedOfferExpectedPriceResponseBody
     */
    errors?: Array<Error>;
}
/**
 * The featured offer expected price result data for the requested offer.
 * @export
 * @interface FeaturedOfferExpectedPriceResult
 */
export interface FeaturedOfferExpectedPriceResult {
    /**
     * 
     * @type {FeaturedOfferExpectedPrice}
     * @memberof FeaturedOfferExpectedPriceResult
     */
    featuredOfferExpectedPrice?: FeaturedOfferExpectedPrice;
    /**
     * The status of the featured offer expected price computation. Possible values include `VALID_FOEP`, `NO_COMPETING_OFFER`, `OFFER_NOT_ELIGIBLE`, `OFFER_NOT_FOUND`, `ASIN_NOT_ELIGIBLE`. Additional values may be added in the future.
     * @type {string}
     * @memberof FeaturedOfferExpectedPriceResult
     */
    resultStatus: string;
    /**
     * 
     * @type {FeaturedOffer}
     * @memberof FeaturedOfferExpectedPriceResult
     */
    competingFeaturedOffer?: FeaturedOffer;
    /**
     * 
     * @type {FeaturedOffer}
     * @memberof FeaturedOfferExpectedPriceResult
     */
    currentFeaturedOffer?: FeaturedOffer;
}
/**
 * Describes the segment in which the offer is featured.
 * @export
 * @interface FeaturedOfferSegment
 */
export interface FeaturedOfferSegment {
    /**
     * The customer membership type that make up this segment
     * @type {string}
     * @memberof FeaturedOfferSegment
     */
    customerMembership: FeaturedOfferSegmentCustomerMembershipEnum | 'PRIME' | 'NON_PRIME';
    /**
     * 
     * @type {SegmentDetails}
     * @memberof FeaturedOfferSegment
     */
    segmentDetails: SegmentDetails;
}

/**
    * @export
    * @enum {string}
    */
export enum FeaturedOfferSegmentCustomerMembershipEnum {
    Prime = 'PRIME',
    NonPrime = 'NON_PRIME'
}

/**
 * Indicates whether the item is fulfilled by Amazon or by the seller (merchant).
 * @export
 * @enum {string}
 */
export enum FulfillmentType {
    Afn = 'AFN',
    Mfn = 'MFN'
}

/**
 * The request body for the `getFeaturedOfferExpectedPriceBatch` operation.
 * @export
 * @interface GetFeaturedOfferExpectedPriceBatchRequest
 */
export interface GetFeaturedOfferExpectedPriceBatchRequest {
    /**
     * A batched list of featured offer expected price requests.
     * @type {Array<FeaturedOfferExpectedPriceRequest>}
     * @memberof GetFeaturedOfferExpectedPriceBatchRequest
     */
    requests?: Array<FeaturedOfferExpectedPriceRequest>;
}
/**
 * The response schema for the `getFeaturedOfferExpectedPriceBatch` operation.
 * @export
 * @interface GetFeaturedOfferExpectedPriceBatchResponse
 */
export interface GetFeaturedOfferExpectedPriceBatchResponse {
    /**
     * A batched list of featured offer expected price responses.
     * @type {Array<FeaturedOfferExpectedPriceResponse>}
     * @memberof GetFeaturedOfferExpectedPriceBatchResponse
     */
    responses?: Array<FeaturedOfferExpectedPriceResponse>;
}
/**
 * The HTTP method associated with an individual request within a batch.
 * @export
 * @enum {string}
 */
export enum HttpMethod {
    Get = 'GET',
    Put = 'PUT',
    Patch = 'PATCH',
    Delete = 'DELETE',
    Post = 'POST'
}

/**
 * The HTTP status line associated with the response to an individual request within a batch. For more information, consult [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html).
 * @export
 * @interface HttpStatusLine
 */
export interface HttpStatusLine {
    /**
     * The HTTP response Status-Code.
     * @type {number}
     * @memberof HttpStatusLine
     */
    statusCode?: number;
    /**
     * The HTTP response Reason-Phase.
     * @type {string}
     * @memberof HttpStatusLine
     */
    reasonPhrase?: string;
}
/**
 * The lowest priced offer for the requested item condition and offer type.
 * @export
 * @interface LowestPricedOffer
 */
export interface LowestPricedOffer {
    /**
     * 
     * @type {LowestPricedOffersInput}
     * @memberof LowestPricedOffer
     */
    lowestPricedOffersInput: LowestPricedOffersInput;
    /**
     * A list of up to 20 lowest priced offers that match the criteria specified in the `lowestPricedOffersInput` parameter.
     * @type {Array<Offer>}
     * @memberof LowestPricedOffer
     */
    offers: Array<Offer>;
}
/**
 * The input required for building the `LowestPricedOffers` data in the response.
 * @export
 * @interface LowestPricedOffersInput
 */
export interface LowestPricedOffersInput {
    /**
     * 
     * @type {Condition}
     * @memberof LowestPricedOffersInput
     */
    itemCondition: Condition | 'New' | 'Used' | 'Collectible' | 'Refurbished' | 'Club';
    /**
     * The type of offers requested for the `LowestPricedOffers`. The `offerType` options are `Consumer` or `Business`. The default `offerType` is `Consumer`.
     * @type {string}
     * @memberof LowestPricedOffersInput
     */
    offerType: LowestPricedOffersInputOfferTypeEnum | 'CONSUMER';
}

/**
    * @export
    * @enum {string}
    */
export enum LowestPricedOffersInputOfferTypeEnum {
    Consumer = 'CONSUMER'
}

/**
 * Error response returned when the request is unsuccessful.
 * @export
 * @interface ModelError
 */
export interface ModelError {
    /**
     * An error code that identifies the type of error that occurred.
     * @type {string}
     * @memberof ModelError
     */
    code: string;
    /**
     * A message that describes the error condition.
     * @type {string}
     * @memberof ModelError
     */
    message: string;
    /**
     * Additional details that can help the caller understand or fix the issue.
     * @type {string}
     * @memberof ModelError
     */
    details?: string;
}
/**
 * Currency type and monetary value. Schema for demonstrating pricing info.
 * @export
 * @interface MoneyType
 */
export interface MoneyType {
    /**
     * The currency code in ISO 4217 format.
     * @type {string}
     * @memberof MoneyType
     */
    currencyCode?: string;
    /**
     * The monetary value.
     * @type {number}
     * @memberof MoneyType
     */
    amount?: number;
}
/**
 * The offer data of a product.
 * @export
 * @interface Offer
 */
export interface Offer {
    /**
     * The seller identifier for the offer.
     * @type {string}
     * @memberof Offer
     */
    sellerId: string;
    /**
     * 
     * @type {Condition}
     * @memberof Offer
     */
    condition: Condition | 'New' | 'Used' | 'Collectible' | 'Refurbished' | 'Club';
    /**
     * The item subcondition for the offer.
     * @type {string}
     * @memberof Offer
     */
    subCondition?: OfferSubConditionEnum | 'New' | 'Mint' | 'VeryGood' | 'Good' | 'Acceptable' | 'Poor' | 'Club' | 'OEM' | 'Warranty' | 'RefurbishedWarranty' | 'Refurbished' | 'OpenBox' | 'Other';
    /**
     * 
     * @type {FulfillmentType}
     * @memberof Offer
     */
    fulfillmentType: FulfillmentType | 'AFN' | 'MFN';
    /**
     * 
     * @type {MoneyType}
     * @memberof Offer
     */
    listingPrice: MoneyType;
    /**
     * A list of shipping options associated with this offer
     * @type {Array<ShippingOption>}
     * @memberof Offer
     */
    shippingOptions?: Array<ShippingOption>;
    /**
     * 
     * @type {Points}
     * @memberof Offer
     */
    points?: Points;
    /**
     * 
     * @type {PrimeDetails}
     * @memberof Offer
     */
    primeDetails?: PrimeDetails;
}

/**
    * @export
    * @enum {string}
    */
export enum OfferSubConditionEnum {
    New = 'New',
    Mint = 'Mint',
    VeryGood = 'VeryGood',
    Good = 'Good',
    Acceptable = 'Acceptable',
    Poor = 'Poor',
    Club = 'Club',
    Oem = 'OEM',
    Warranty = 'Warranty',
    RefurbishedWarranty = 'RefurbishedWarranty',
    Refurbished = 'Refurbished',
    OpenBox = 'OpenBox',
    Other = 'Other'
}

/**
 * Identifies an offer from a particular seller on an ASIN.
 * @export
 * @interface OfferIdentifier
 */
export interface OfferIdentifier {
    /**
     * A marketplace identifier. Specifies the marketplace for which data is returned.
     * @type {string}
     * @memberof OfferIdentifier
     */
    marketplaceId: string;
    /**
     * The seller identifier for the offer.
     * @type {string}
     * @memberof OfferIdentifier
     */
    sellerId?: string;
    /**
     * The seller stock keeping unit (SKU) of the item. This will only be present for the target offer, which belongs to the requesting seller.
     * @type {string}
     * @memberof OfferIdentifier
     */
    sku?: string;
    /**
     * The Amazon Standard Identification Number (ASIN) of the item.
     * @type {string}
     * @memberof OfferIdentifier
     */
    asin: string;
    /**
     * 
     * @type {FulfillmentType}
     * @memberof OfferIdentifier
     */
    fulfillmentType?: FulfillmentType | 'AFN' | 'MFN';
}
/**
 * The number of Amazon Points offered with the purchase of an item, and their monetary value.
 * @export
 * @interface Points
 */
export interface Points {
    /**
     * The number of points.
     * @type {number}
     * @memberof Points
     */
    pointsNumber?: number;
    /**
     * 
     * @type {MoneyType}
     * @memberof Points
     */
    pointsMonetaryValue?: MoneyType;
}
/**
 * Schema for item\'s price information, including listing price, shipping price, and Amazon points.
 * @export
 * @interface Price
 */
export interface Price {
    /**
     * 
     * @type {MoneyType}
     * @memberof Price
     */
    listingPrice: MoneyType;
    /**
     * 
     * @type {MoneyType}
     * @memberof Price
     */
    shippingPrice?: MoneyType;
    /**
     * 
     * @type {Points}
     * @memberof Price
     */
    points?: Points;
}
/**
 * Amazon Prime details.
 * @export
 * @interface PrimeDetails
 */
export interface PrimeDetails {
    /**
     * Indicates whether the offer is an Amazon Prime offer.
     * @type {string}
     * @memberof PrimeDetails
     */
    eligibility: PrimeDetailsEligibilityEnum | 'NATIONAL' | 'REGIONAL' | 'NONE';
}

/**
    * @export
    * @enum {string}
    */
export enum PrimeDetailsEligibilityEnum {
    National = 'NATIONAL',
    Regional = 'REGIONAL',
    None = 'NONE'
}

/**
 * The reference price for the given ASIN `marketplaceId` combination. 
 * @export
 * @interface ReferencePrice
 */
export interface ReferencePrice {
    /**
     * The name of the reference price like `CompetitivePriceThreshold`.
     * @type {string}
     * @memberof ReferencePrice
     */
    name: string;
    /**
     * 
     * @type {MoneyType}
     * @memberof ReferencePrice
     */
    price: MoneyType;
}
/**
 * The details about the segment.
 * @export
 * @interface SegmentDetails
 */
export interface SegmentDetails {
    /**
     * Glance view weight percentage for this segment. The glance views for this segment as a percentage of total glance views across all segments on the ASIN. A higher percentage indicates more Amazon customers see this offer as the Featured Offer.
     * @type {number}
     * @memberof SegmentDetails
     */
    glanceViewWeightPercentage?: number;
}
/**
 * A product offer with segment information indicating where it\'s featured.
 * @export
 * @interface SegmentedFeaturedOffer
 */
export interface SegmentedFeaturedOffer {
    /**
     * The seller identifier for the offer.
     * @type {string}
     * @memberof SegmentedFeaturedOffer
     */
    sellerId: string;
    /**
     * 
     * @type {Condition}
     * @memberof SegmentedFeaturedOffer
     */
    condition: Condition | 'New' | 'Used' | 'Collectible' | 'Refurbished' | 'Club';
    /**
     * The item subcondition for the offer.
     * @type {string}
     * @memberof SegmentedFeaturedOffer
     */
    subCondition?: SegmentedFeaturedOfferSubConditionEnum | 'New' | 'Mint' | 'VeryGood' | 'Good' | 'Acceptable' | 'Poor' | 'Club' | 'OEM' | 'Warranty' | 'RefurbishedWarranty' | 'Refurbished' | 'OpenBox' | 'Other';
    /**
     * 
     * @type {FulfillmentType}
     * @memberof SegmentedFeaturedOffer
     */
    fulfillmentType: FulfillmentType | 'AFN' | 'MFN';
    /**
     * 
     * @type {MoneyType}
     * @memberof SegmentedFeaturedOffer
     */
    listingPrice: MoneyType;
    /**
     * A list of shipping options associated with this offer
     * @type {Array<ShippingOption>}
     * @memberof SegmentedFeaturedOffer
     */
    shippingOptions?: Array<ShippingOption>;
    /**
     * 
     * @type {Points}
     * @memberof SegmentedFeaturedOffer
     */
    points?: Points;
    /**
     * 
     * @type {PrimeDetails}
     * @memberof SegmentedFeaturedOffer
     */
    primeDetails?: PrimeDetails;
    /**
     * The list of segment information in which the offer is featured.
     * @type {Array<FeaturedOfferSegment>}
     * @memberof SegmentedFeaturedOffer
     */
    featuredOfferSegments: Array<FeaturedOfferSegment>;
}

/**
    * @export
    * @enum {string}
    */
export enum SegmentedFeaturedOfferSubConditionEnum {
    New = 'New',
    Mint = 'Mint',
    VeryGood = 'VeryGood',
    Good = 'Good',
    Acceptable = 'Acceptable',
    Poor = 'Poor',
    Club = 'Club',
    Oem = 'OEM',
    Warranty = 'Warranty',
    RefurbishedWarranty = 'RefurbishedWarranty',
    Refurbished = 'Refurbished',
    OpenBox = 'OpenBox',
    Other = 'Other'
}

/**
 * The list of segment information in which the offer is featured.
 * @export
 * @interface SegmentedFeaturedOfferAllOf
 */
export interface SegmentedFeaturedOfferAllOf {
    /**
     * The list of segment information in which the offer is featured.
     * @type {Array<FeaturedOfferSegment>}
     * @memberof SegmentedFeaturedOfferAllOf
     */
    featuredOfferSegments: Array<FeaturedOfferSegment>;
}
/**
 * The shipping option available for the offer.
 * @export
 * @interface ShippingOption
 */
export interface ShippingOption {
    /**
     * The type of the shipping option.
     * @type {string}
     * @memberof ShippingOption
     */
    shippingOptionType: ShippingOptionShippingOptionTypeEnum | 'DEFAULT';
    /**
     * 
     * @type {MoneyType}
     * @memberof ShippingOption
     */
    price: MoneyType;
}

/**
    * @export
    * @enum {string}
    */
export enum ShippingOptionShippingOptionTypeEnum {
    Default = 'DEFAULT'
}


/**
 * ProductPricingApi - axios parameter creator
 * @export
 */
export const ProductPricingApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Returns the competitive summary response including featured buying options for the ASIN and `marketplaceId` combination.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.033 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {CompetitiveSummaryBatchRequest} requests The batch of &#x60;getCompetitiveSummary&#x60; requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCompetitiveSummary: async (requests: CompetitiveSummaryBatchRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'requests' is not null or undefined
            assertParamExists('getCompetitiveSummary', 'requests', requests)
            const localVarPath = `/batches/products/pricing/2022-05-01/items/competitiveSummary`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(requests, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns the set of responses that correspond to the batched list of up to 40 requests defined in the request body. The response for each successful (HTTP status code 200) request in the set includes the computed listing price at or below which a seller can expect to become the featured offer (before applicable promotions). This is called the featured offer expected price (FOEP). Featured offer is not guaranteed, because competing offers may change, and different offers may be featured based on other factors, including fulfillment capabilities to a specific customer. The response to an unsuccessful request includes the available error text.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.033 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GetFeaturedOfferExpectedPriceBatchRequest} getFeaturedOfferExpectedPriceBatchRequestBody The batch of &#x60;getFeaturedOfferExpectedPrice&#x60; requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFeaturedOfferExpectedPriceBatch: async (getFeaturedOfferExpectedPriceBatchRequestBody: GetFeaturedOfferExpectedPriceBatchRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'getFeaturedOfferExpectedPriceBatchRequestBody' is not null or undefined
            assertParamExists('getFeaturedOfferExpectedPriceBatch', 'getFeaturedOfferExpectedPriceBatchRequestBody', getFeaturedOfferExpectedPriceBatchRequestBody)
            const localVarPath = `/batches/products/pricing/2022-05-01/offer/featuredOfferExpectedPrice`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(getFeaturedOfferExpectedPriceBatchRequestBody, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ProductPricingApi - functional programming interface
 * @export
 */
export const ProductPricingApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = ProductPricingApiAxiosParamCreator(configuration)
    return {
        /**
         * Returns the competitive summary response including featured buying options for the ASIN and `marketplaceId` combination.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.033 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {CompetitiveSummaryBatchRequest} requests The batch of &#x60;getCompetitiveSummary&#x60; requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCompetitiveSummary(requests: CompetitiveSummaryBatchRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CompetitiveSummaryBatchResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCompetitiveSummary(requests, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns the set of responses that correspond to the batched list of up to 40 requests defined in the request body. The response for each successful (HTTP status code 200) request in the set includes the computed listing price at or below which a seller can expect to become the featured offer (before applicable promotions). This is called the featured offer expected price (FOEP). Featured offer is not guaranteed, because competing offers may change, and different offers may be featured based on other factors, including fulfillment capabilities to a specific customer. The response to an unsuccessful request includes the available error text.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.033 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GetFeaturedOfferExpectedPriceBatchRequest} getFeaturedOfferExpectedPriceBatchRequestBody The batch of &#x60;getFeaturedOfferExpectedPrice&#x60; requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getFeaturedOfferExpectedPriceBatch(getFeaturedOfferExpectedPriceBatchRequestBody: GetFeaturedOfferExpectedPriceBatchRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetFeaturedOfferExpectedPriceBatchResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getFeaturedOfferExpectedPriceBatch(getFeaturedOfferExpectedPriceBatchRequestBody, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * ProductPricingApi - factory interface
 * @export
 */
export const ProductPricingApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = ProductPricingApiFp(configuration)
    return {
        /**
         * Returns the competitive summary response including featured buying options for the ASIN and `marketplaceId` combination.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.033 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {CompetitiveSummaryBatchRequest} requests The batch of &#x60;getCompetitiveSummary&#x60; requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCompetitiveSummary(requests: CompetitiveSummaryBatchRequest, options?: any): AxiosPromise<CompetitiveSummaryBatchResponse> {
            return localVarFp.getCompetitiveSummary(requests, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns the set of responses that correspond to the batched list of up to 40 requests defined in the request body. The response for each successful (HTTP status code 200) request in the set includes the computed listing price at or below which a seller can expect to become the featured offer (before applicable promotions). This is called the featured offer expected price (FOEP). Featured offer is not guaranteed, because competing offers may change, and different offers may be featured based on other factors, including fulfillment capabilities to a specific customer. The response to an unsuccessful request includes the available error text.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.033 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {GetFeaturedOfferExpectedPriceBatchRequest} getFeaturedOfferExpectedPriceBatchRequestBody The batch of &#x60;getFeaturedOfferExpectedPrice&#x60; requests.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getFeaturedOfferExpectedPriceBatch(getFeaturedOfferExpectedPriceBatchRequestBody: GetFeaturedOfferExpectedPriceBatchRequest, options?: any): AxiosPromise<GetFeaturedOfferExpectedPriceBatchResponse> {
            return localVarFp.getFeaturedOfferExpectedPriceBatch(getFeaturedOfferExpectedPriceBatchRequestBody, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getCompetitiveSummary operation in ProductPricingApi.
 * @export
 * @interface ProductPricingApiGetCompetitiveSummaryRequest
 */
export interface ProductPricingApiGetCompetitiveSummaryRequest {
    /**
     * The batch of &#x60;getCompetitiveSummary&#x60; requests.
     * @type {CompetitiveSummaryBatchRequest}
     * @memberof ProductPricingApiGetCompetitiveSummary
     */
    readonly requests: CompetitiveSummaryBatchRequest
}

/**
 * Request parameters for getFeaturedOfferExpectedPriceBatch operation in ProductPricingApi.
 * @export
 * @interface ProductPricingApiGetFeaturedOfferExpectedPriceBatchRequest
 */
export interface ProductPricingApiGetFeaturedOfferExpectedPriceBatchRequest {
    /**
     * The batch of &#x60;getFeaturedOfferExpectedPrice&#x60; requests.
     * @type {GetFeaturedOfferExpectedPriceBatchRequest}
     * @memberof ProductPricingApiGetFeaturedOfferExpectedPriceBatch
     */
    readonly getFeaturedOfferExpectedPriceBatchRequestBody: GetFeaturedOfferExpectedPriceBatchRequest
}

/**
 * ProductPricingApi - object-oriented interface
 * @export
 * @class ProductPricingApi
 * @extends {BaseAPI}
 */
export class ProductPricingApi extends BaseAPI {
    /**
     * Returns the competitive summary response including featured buying options for the ASIN and `marketplaceId` combination.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.033 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ProductPricingApiGetCompetitiveSummaryRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductPricingApi
     */
    public getCompetitiveSummary(requestParameters: ProductPricingApiGetCompetitiveSummaryRequest, options?: any) {
        return ProductPricingApiFp(this.configuration).getCompetitiveSummary(requestParameters.requests, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns the set of responses that correspond to the batched list of up to 40 requests defined in the request body. The response for each successful (HTTP status code 200) request in the set includes the computed listing price at or below which a seller can expect to become the featured offer (before applicable promotions). This is called the featured offer expected price (FOEP). Featured offer is not guaranteed, because competing offers may change, and different offers may be featured based on other factors, including fulfillment capabilities to a specific customer. The response to an unsuccessful request includes the available error text.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 0.033 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {ProductPricingApiGetFeaturedOfferExpectedPriceBatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductPricingApi
     */
    public getFeaturedOfferExpectedPriceBatch(requestParameters: ProductPricingApiGetFeaturedOfferExpectedPriceBatchRequest, options?: any) {
        return ProductPricingApiFp(this.configuration).getFeaturedOfferExpectedPriceBatch(requestParameters.getFeaturedOfferExpectedPriceBatchRequestBody, options).then((request) => request(this.axios, this.basePath));
    }
}


