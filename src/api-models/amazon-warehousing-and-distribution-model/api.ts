/* tslint:disable */
/* eslint-disable */
/**
 * The Selling Partner API for Amazon Warehousing and Distribution
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory. 
 *
 * The version of the OpenAPI document: 2024-05-09
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { Configuration } from './configuration';
import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';

/**
 * Shipping address that represents the origin or destination location.
 * @export
 * @interface Address
 */
export interface Address {
    /**
     * First line of the address text.
     * @type {string}
     * @memberof Address
     */
    addressLine1: string;
    /**
     * Optional second line of the address text.
     * @type {string}
     * @memberof Address
     */
    addressLine2?: string;
    /**
     * Optional third line of the address text.
     * @type {string}
     * @memberof Address
     */
    addressLine3?: string;
    /**
     * Optional city where this address is located.
     * @type {string}
     * @memberof Address
     */
    city?: string;
    /**
     * Two-digit, ISO 3166-1 alpha-2 formatted country code where this address is located.
     * @type {string}
     * @memberof Address
     */
    countryCode: string;
    /**
     * Optional county where this address is located.
     * @type {string}
     * @memberof Address
     */
    county?: string;
    /**
     * Optional district where this address is located.
     * @type {string}
     * @memberof Address
     */
    district?: string;
    /**
     * Name of the person, business, or institution at this address.
     * @type {string}
     * @memberof Address
     */
    name: string;
    /**
     * Optional E.164-formatted phone number for an available contact at this address.
     * @type {string}
     * @memberof Address
     */
    phoneNumber?: string;
    /**
     * Optional postal code where this address is located.
     * @type {string}
     * @memberof Address
     */
    postalCode?: string;
    /**
     * State or region where this address is located. Note that this is contextual to the specified country code.
     * @type {string}
     * @memberof Address
     */
    stateOrRegion: string;
}
/**
 * Identifies the carrier that will deliver the shipment.
 * @export
 * @interface CarrierCode
 */
export interface CarrierCode {
    /**
     * 
     * @type {CarrierCodeType}
     * @memberof CarrierCode
     */
    carrierCodeType?: CarrierCodeType | 'SCAC';
    /**
     * Value of the carrier code.
     * @type {string}
     * @memberof CarrierCode
     */
    carrierCodeValue?: string;
}
/**
 * Denotes the type for the carrier.
 * @export
 * @enum {string}
 */
export enum CarrierCodeType {
    Scac = 'SCAC'
}

/**
 * Unit of measurement for package dimensions.
 * @export
 * @enum {string}
 */
export enum DimensionUnitOfMeasurement {
    Inches = 'INCHES',
    Centimeters = 'CENTIMETERS'
}

/**
 * Represents an AWD distribution package.
 * @export
 * @interface DistributionPackage
 */
export interface DistributionPackage {
    /**
     * 
     * @type {DistributionPackageContents}
     * @memberof DistributionPackage
     */
    contents: DistributionPackageContents;
    /**
     * 
     * @type {MeasurementData}
     * @memberof DistributionPackage
     */
    measurements: MeasurementData;
    /**
     * 
     * @type {DistributionPackageType}
     * @memberof DistributionPackage
     */
    type: DistributionPackageType | 'CASE' | 'PALLET';
}
/**
 * Represents the contents inside a package, which can be products or a nested package.
 * @export
 * @interface DistributionPackageContents
 */
export interface DistributionPackageContents {
    /**
     * This is required only when `DistributionPackageType=PALLET`.
     * @type {Array<DistributionPackageQuantity>}
     * @memberof DistributionPackageContents
     */
    packages?: Array<DistributionPackageQuantity>;
    /**
     * This is required only when `DistributionPackageType=CASE`.
     * @type {Array<ProductQuantity>}
     * @memberof DistributionPackageContents
     */
    products?: Array<ProductQuantity>;
}
/**
 * Represents a distribution package with its respective quantity.
 * @export
 * @interface DistributionPackageQuantity
 */
export interface DistributionPackageQuantity {
    /**
     * Number of cases or pallets with the same package configuration.
     * @type {number}
     * @memberof DistributionPackageQuantity
     */
    count: number;
    /**
     * 
     * @type {DistributionPackage}
     * @memberof DistributionPackageQuantity
     */
    distributionPackage: DistributionPackage;
}
/**
 * Type of distribution packages.
 * @export
 * @enum {string}
 */
export enum DistributionPackageType {
    Case = 'CASE',
    Pallet = 'PALLET'
}

/**
 * This exception is thrown when client inputs are invalid.
 * @export
 * @interface ErrorList
 */
export interface ErrorList {
    /**
     * A list of errors describing the failures.
     * @type {Array<Error>}
     * @memberof ErrorList
     */
    errors: Array<Error>;
}
/**
 * Represents an AWD inbound shipment.
 * @export
 * @interface InboundShipment
 */
export interface InboundShipment {
    /**
     * 
     * @type {CarrierCode}
     * @memberof InboundShipment
     */
    carrierCode?: CarrierCode;
    /**
     * Timestamp when the shipment was created. The date is returned in <a href=\'https://developer-docs.amazon.com/sp-api/docs/iso-8601\'>ISO 8601</a> format.
     * @type {string}
     * @memberof InboundShipment
     */
    createdAt?: string;
    /**
     * 
     * @type {Address}
     * @memberof InboundShipment
     */
    destinationAddress: Address;
    /**
     * Client-provided reference ID that can correlate this shipment to client resources. For example, to map this shipment to an internal bookkeeping order record.
     * @type {string}
     * @memberof InboundShipment
     */
    externalReferenceId?: string;
    /**
     * The AWD inbound order ID that this inbound shipment belongs to.
     * @type {string}
     * @memberof InboundShipment
     */
    orderId: string;
    /**
     * 
     * @type {Address}
     * @memberof InboundShipment
     */
    originAddress: Address;
    /**
     * Quantity received (at the receiving end) as part of this shipment.
     * @type {Array<InventoryQuantity>}
     * @memberof InboundShipment
     */
    receivedQuantity?: Array<InventoryQuantity>;
    /**
     * Timestamp when the shipment will be shipped.
     * @type {string}
     * @memberof InboundShipment
     */
    shipBy?: string;
    /**
     * Packages that are part of this shipment.
     * @type {Array<DistributionPackageQuantity>}
     * @memberof InboundShipment
     */
    shipmentContainerQuantities: Array<DistributionPackageQuantity>;
    /**
     * Unique shipment ID.
     * @type {string}
     * @memberof InboundShipment
     */
    shipmentId: string;
    /**
     * Quantity details at SKU level for the shipment. This attribute will only appear if the skuQuantities parameter in the request is set to SHOW.
     * @type {Array<SkuQuantity>}
     * @memberof InboundShipment
     */
    shipmentSkuQuantities?: Array<SkuQuantity>;
    /**
     * 
     * @type {InboundShipmentStatus}
     * @memberof InboundShipment
     */
    shipmentStatus: InboundShipmentStatus | 'CREATED' | 'SHIPPED' | 'IN_TRANSIT' | 'RECEIVING' | 'DELIVERED' | 'CLOSED' | 'CANCELLED';
    /**
     * Carrier-unique tracking ID for this shipment.
     * @type {string}
     * @memberof InboundShipment
     */
    trackingId?: string;
    /**
     * Timestamp when the shipment was updated. The date is returned in <a href=\'https://developer-docs.amazon.com/sp-api/docs/iso-8601\'>ISO 8601</a> format.
     * @type {string}
     * @memberof InboundShipment
     */
    updatedAt?: string;
    /**
     * An AWD-provided reference ID that you can use to interact with the warehouse. For example, a carrier appointment booking.
     * @type {string}
     * @memberof InboundShipment
     */
    warehouseReferenceId?: string;
}
/**
 * Possible shipment statuses used by shipments.
 * @export
 * @enum {string}
 */
export enum InboundShipmentStatus {
    Created = 'CREATED',
    Shipped = 'SHIPPED',
    InTransit = 'IN_TRANSIT',
    Receiving = 'RECEIVING',
    Delivered = 'DELIVERED',
    Closed = 'CLOSED',
    Cancelled = 'CANCELLED'
}

/**
 * Summary for an AWD inbound shipment containing the shipment ID, which can be used to retrieve the actual shipment.
 * @export
 * @interface InboundShipmentSummary
 */
export interface InboundShipmentSummary {
    /**
     * Timestamp when the shipment was created.
     * @type {string}
     * @memberof InboundShipmentSummary
     */
    createdAt?: string;
    /**
     * Optional client-provided reference ID that can be used to correlate this shipment with client resources. For example, to map this shipment to an internal bookkeeping order record.
     * @type {string}
     * @memberof InboundShipmentSummary
     */
    externalReferenceId?: string;
    /**
     * The AWD inbound order ID that this inbound shipment belongs to.
     * @type {string}
     * @memberof InboundShipmentSummary
     */
    orderId: string;
    /**
     * A unique shipment ID.
     * @type {string}
     * @memberof InboundShipmentSummary
     */
    shipmentId: string;
    /**
     * 
     * @type {InboundShipmentStatus}
     * @memberof InboundShipmentSummary
     */
    shipmentStatus: InboundShipmentStatus | 'CREATED' | 'SHIPPED' | 'IN_TRANSIT' | 'RECEIVING' | 'DELIVERED' | 'CLOSED' | 'CANCELLED';
    /**
     * Timestamp when the shipment was updated.
     * @type {string}
     * @memberof InboundShipmentSummary
     */
    updatedAt?: string;
}
/**
 * Additional inventory details. This object is only displayed if the details parameter in the request is set to `SHOW`.
 * @export
 * @interface InventoryDetails
 */
export interface InventoryDetails {
    /**
     * Quantity that is available for downstream channel replenishment.
     * @type {number}
     * @memberof InventoryDetails
     */
    availableDistributableQuantity?: number;
    /**
     * Quantity that is reserved for a downstream channel replenishment order that is being prepared for shipment.
     * @type {number}
     * @memberof InventoryDetails
     */
    reservedDistributableQuantity?: number;
}
/**
 * Enum to specify if returned summaries should include additional summarized inventory details and quantities.
 * @export
 * @enum {string}
 */
export enum InventoryDetailsVisibility {
    Show = 'SHOW',
    Hide = 'HIDE'
}

/**
 * AWD inventory payload.
 * @export
 * @interface InventoryListing
 */
export interface InventoryListing {
    /**
     * List of inventory summaries.
     * @type {Array<InventorySummary>}
     * @memberof InventoryListing
     */
    inventory: Array<InventorySummary>;
    /**
     * Token to retrieve the next set of paginated results.
     * @type {string}
     * @memberof InventoryListing
     */
    nextToken?: string;
}
/**
 * Quantity of inventory with an associated measurement unit context.
 * @export
 * @interface InventoryQuantity
 */
export interface InventoryQuantity {
    /**
     * Quantity of the respective inventory.
     * @type {number}
     * @memberof InventoryQuantity
     */
    quantity: number;
    /**
     * 
     * @type {InventoryUnitOfMeasurement}
     * @memberof InventoryQuantity
     */
    unitOfMeasurement: InventoryUnitOfMeasurement | 'PRODUCT_UNITS' | 'CASES' | 'PALLETS';
}
/**
 * Summary of inventory per SKU.
 * @export
 * @interface InventorySummary
 */
export interface InventorySummary {
    /**
     * 
     * @type {InventoryDetails}
     * @memberof InventorySummary
     */
    inventoryDetails?: InventoryDetails;
    /**
     * The seller or merchant SKU.
     * @type {string}
     * @memberof InventorySummary
     */
    sku: string;
    /**
     * Total quantity that is in-transit from the seller and has not yet been received at an AWD Distribution Center
     * @type {number}
     * @memberof InventorySummary
     */
    totalInboundQuantity?: number;
    /**
     * Total quantity that is present in AWD distribution centers.
     * @type {number}
     * @memberof InventorySummary
     */
    totalOnhandQuantity?: number;
}
/**
 * Unit of measurement for the inventory.
 * @export
 * @enum {string}
 */
export enum InventoryUnitOfMeasurement {
    ProductUnits = 'PRODUCT_UNITS',
    Cases = 'CASES',
    Pallets = 'PALLETS'
}

/**
 * Package weight and dimension.
 * @export
 * @interface MeasurementData
 */
export interface MeasurementData {
    /**
     * 
     * @type {PackageDimensions}
     * @memberof MeasurementData
     */
    dimensions?: PackageDimensions;
    /**
     * 
     * @type {PackageVolume}
     * @memberof MeasurementData
     */
    volume?: PackageVolume;
    /**
     * 
     * @type {PackageWeight}
     * @memberof MeasurementData
     */
    weight: PackageWeight;
}
/**
 * Error response returned when the request is unsuccessful.
 * @export
 * @interface ModelError
 */
export interface ModelError {
    /**
     * An error code that identifies the type of error that occurred.
     * @type {string}
     * @memberof ModelError
     */
    code: string;
    /**
     * Additional details that can help the caller understand or fix the issue.
     * @type {string}
     * @memberof ModelError
     */
    details?: string;
    /**
     * A message that describes the error condition.
     * @type {string}
     * @memberof ModelError
     */
    message: string;
}
/**
 * Dimensions of the package.
 * @export
 * @interface PackageDimensions
 */
export interface PackageDimensions {
    /**
     * Height of the package.
     * @type {number}
     * @memberof PackageDimensions
     */
    height: number;
    /**
     * Length of the package.
     * @type {number}
     * @memberof PackageDimensions
     */
    length: number;
    /**
     * 
     * @type {DimensionUnitOfMeasurement}
     * @memberof PackageDimensions
     */
    unitOfMeasurement: DimensionUnitOfMeasurement | 'INCHES' | 'CENTIMETERS';
    /**
     * Width of the package.
     * @type {number}
     * @memberof PackageDimensions
     */
    width: number;
}
/**
 * Represents the volume of the package with a unit of measurement.
 * @export
 * @interface PackageVolume
 */
export interface PackageVolume {
    /**
     * 
     * @type {VolumeUnitOfMeasurement}
     * @memberof PackageVolume
     */
    unitOfMeasurement: VolumeUnitOfMeasurement | 'CU_IN' | 'CBM' | 'CC';
    /**
     * The package volume value.
     * @type {number}
     * @memberof PackageVolume
     */
    volume: number;
}
/**
 * Represents the weight of the package with a unit of measurement.
 * @export
 * @interface PackageWeight
 */
export interface PackageWeight {
    /**
     * 
     * @type {WeightUnitOfMeasurement}
     * @memberof PackageWeight
     */
    unitOfMeasurement: WeightUnitOfMeasurement | 'POUNDS' | 'KILOGRAMS';
    /**
     * The package weight value.
     * @type {number}
     * @memberof PackageWeight
     */
    weight: number;
}
/**
 * Product instance attribute that is not described at the SKU level in the catalog.
 * @export
 * @interface ProductAttribute
 */
export interface ProductAttribute {
    /**
     * Product attribute name.
     * @type {string}
     * @memberof ProductAttribute
     */
    name?: string;
    /**
     * Product attribute value.
     * @type {string}
     * @memberof ProductAttribute
     */
    value?: string;
}
/**
 * Represents a product with the SKU details and the corresponding quantity.
 * @export
 * @interface ProductQuantity
 */
export interface ProductQuantity {
    /**
     * Attributes for this instance of the product. For example, already-prepped, or other attributes that distinguish the product beyond the SKU.
     * @type {Array<ProductAttribute>}
     * @memberof ProductQuantity
     */
    attributes?: Array<ProductAttribute>;
    /**
     * Product quantity.
     * @type {number}
     * @memberof ProductQuantity
     */
    quantity: number;
    /**
     * The seller or merchant SKU.
     * @type {string}
     * @memberof ProductQuantity
     */
    sku: string;
}
/**
 * A list of inbound shipment summaries filtered by the attributes specified in the request.
 * @export
 * @interface ShipmentListing
 */
export interface ShipmentListing {
    /**
     * Token to retrieve the next set of paginated results.
     * @type {string}
     * @memberof ShipmentListing
     */
    nextToken?: string;
    /**
     * List of inbound shipment summaries.
     * @type {Array<InboundShipmentSummary>}
     * @memberof ShipmentListing
     */
    shipments?: Array<InboundShipmentSummary>;
}
/**
 * Denotes the field name on which the shipments are to be sorted.
 * @export
 * @enum {string}
 */
export enum ShipmentSortableField {
    UpdatedAt = 'UPDATED_AT',
    CreatedAt = 'CREATED_AT'
}

/**
 * Enum to specify if returned shipment should include SKU quantity details
 * @export
 * @enum {string}
 */
export enum SkuQuantitiesVisibility {
    Show = 'SHOW',
    Hide = 'HIDE'
}

/**
 * Quantity details for a SKU as part of a shipment
 * @export
 * @interface SkuQuantity
 */
export interface SkuQuantity {
    /**
     * 
     * @type {InventoryQuantity}
     * @memberof SkuQuantity
     */
    expectedQuantity: InventoryQuantity;
    /**
     * 
     * @type {InventoryQuantity}
     * @memberof SkuQuantity
     */
    receivedQuantity?: InventoryQuantity;
    /**
     * The merchant stock keeping unit
     * @type {string}
     * @memberof SkuQuantity
     */
    sku: string;
}
/**
 * Sort order for a collection of items. For example, order or shipment.
 * @export
 * @enum {string}
 */
export enum SortOrder {
    Ascending = 'ASCENDING',
    Descending = 'DESCENDING'
}

/**
 * Unit of measurement for the package volume.
 * @export
 * @enum {string}
 */
export enum VolumeUnitOfMeasurement {
    CuIn = 'CU_IN',
    Cbm = 'CBM',
    Cc = 'CC'
}

/**
 * Unit of measurement for the package weight.
 * @export
 * @enum {string}
 */
export enum WeightUnitOfMeasurement {
    Pounds = 'POUNDS',
    Kilograms = 'KILOGRAMS'
}


/**
 * AwdApi - axios parameter creator
 * @export
 */
export const AwdApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Retrieves an AWD inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api)
         * @param {string} shipmentId ID for the shipment. A shipment contains the cases being inbounded.
         * @param {'SHOW' | 'HIDE'} [skuQuantities] If equal to &#x60;SHOW&#x60;, the response includes the shipment SKU quantity details.  Defaults to &#x60;HIDE&#x60;, in which case the response does not contain SKU quantities
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInboundShipment: async (shipmentId: string, skuQuantities?: 'SHOW' | 'HIDE', options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'shipmentId' is not null or undefined
            assertParamExists('getInboundShipment', 'shipmentId', shipmentId)
            const localVarPath = `/awd/2024-05-09/inboundShipments/{shipmentId}`
                .replace(`{${"shipmentId"}}`, encodeURIComponent(String(shipmentId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (skuQuantities !== undefined) {
                localVarQueryParameter['skuQuantities'] = skuQuantities;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Retrieves a summary of all the inbound AWD shipments associated with a merchant, with the ability to apply optional filters.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {'UPDATED_AT' | 'CREATED_AT'} [sortBy] Field to sort results by. By default, the response will be sorted by UPDATED_AT.
         * @param {'ASCENDING' | 'DESCENDING'} [sortOrder] Sort the response in ASCENDING or DESCENDING order. By default, the response will be sorted in DESCENDING order.
         * @param {'CREATED' | 'SHIPPED' | 'IN_TRANSIT' | 'RECEIVING' | 'DELIVERED' | 'CLOSED' | 'CANCELLED'} [shipmentStatus] Filter by inbound shipment status.
         * @param {string} [updatedAfter] List the inbound shipments that were updated after a certain time (inclusive). The date must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [updatedBefore] List the inbound shipments that were updated before a certain time (inclusive). The date must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {number} [maxResults] Maximum number of results to return.
         * @param {string} [nextToken] Token to retrieve the next set of paginated results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listInboundShipments: async (sortBy?: 'UPDATED_AT' | 'CREATED_AT', sortOrder?: 'ASCENDING' | 'DESCENDING', shipmentStatus?: 'CREATED' | 'SHIPPED' | 'IN_TRANSIT' | 'RECEIVING' | 'DELIVERED' | 'CLOSED' | 'CANCELLED', updatedAfter?: string, updatedBefore?: string, maxResults?: number, nextToken?: string, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/awd/2024-05-09/inboundShipments`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (sortBy !== undefined) {
                localVarQueryParameter['sortBy'] = sortBy;
            }

            if (sortOrder !== undefined) {
                localVarQueryParameter['sortOrder'] = sortOrder;
            }

            if (shipmentStatus !== undefined) {
                localVarQueryParameter['shipmentStatus'] = shipmentStatus;
            }

            if (updatedAfter !== undefined) {
                localVarQueryParameter['updatedAfter'] = (updatedAfter as any instanceof Date) ?
                    (updatedAfter as any).toISOString() :
                    updatedAfter;
            }

            if (updatedBefore !== undefined) {
                localVarQueryParameter['updatedBefore'] = (updatedBefore as any instanceof Date) ?
                    (updatedBefore as any).toISOString() :
                    updatedBefore;
            }

            if (maxResults !== undefined) {
                localVarQueryParameter['maxResults'] = maxResults;
            }

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Lists AWD inventory associated with a merchant with the ability to apply optional filters.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} [sku] Filter by seller or merchant SKU for the item.
         * @param {'ASCENDING' | 'DESCENDING'} [sortOrder] Sort the response in &#x60;ASCENDING&#x60; or &#x60;DESCENDING&#x60; order.
         * @param {'SHOW' | 'HIDE'} [details] Set to &#x60;SHOW&#x60; to return summaries with additional inventory details. Defaults to &#x60;HIDE,&#x60; which returns only inventory summary totals.
         * @param {string} [nextToken] Token to retrieve the next set of paginated results.
         * @param {number} [maxResults] Maximum number of results to return.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listInventory: async (sku?: string, sortOrder?: 'ASCENDING' | 'DESCENDING', details?: 'SHOW' | 'HIDE', nextToken?: string, maxResults?: number, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/awd/2024-05-09/inventory`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (sku !== undefined) {
                localVarQueryParameter['sku'] = sku;
            }

            if (sortOrder !== undefined) {
                localVarQueryParameter['sortOrder'] = sortOrder;
            }

            if (details !== undefined) {
                localVarQueryParameter['details'] = details;
            }

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (maxResults !== undefined) {
                localVarQueryParameter['maxResults'] = maxResults;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * AwdApi - functional programming interface
 * @export
 */
export const AwdApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = AwdApiAxiosParamCreator(configuration)
    return {
        /**
         * Retrieves an AWD inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api)
         * @param {string} shipmentId ID for the shipment. A shipment contains the cases being inbounded.
         * @param {'SHOW' | 'HIDE'} [skuQuantities] If equal to &#x60;SHOW&#x60;, the response includes the shipment SKU quantity details.  Defaults to &#x60;HIDE&#x60;, in which case the response does not contain SKU quantities
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getInboundShipment(shipmentId: string, skuQuantities?: 'SHOW' | 'HIDE', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InboundShipment>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getInboundShipment(shipmentId, skuQuantities, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Retrieves a summary of all the inbound AWD shipments associated with a merchant, with the ability to apply optional filters.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {'UPDATED_AT' | 'CREATED_AT'} [sortBy] Field to sort results by. By default, the response will be sorted by UPDATED_AT.
         * @param {'ASCENDING' | 'DESCENDING'} [sortOrder] Sort the response in ASCENDING or DESCENDING order. By default, the response will be sorted in DESCENDING order.
         * @param {'CREATED' | 'SHIPPED' | 'IN_TRANSIT' | 'RECEIVING' | 'DELIVERED' | 'CLOSED' | 'CANCELLED'} [shipmentStatus] Filter by inbound shipment status.
         * @param {string} [updatedAfter] List the inbound shipments that were updated after a certain time (inclusive). The date must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [updatedBefore] List the inbound shipments that were updated before a certain time (inclusive). The date must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {number} [maxResults] Maximum number of results to return.
         * @param {string} [nextToken] Token to retrieve the next set of paginated results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listInboundShipments(sortBy?: 'UPDATED_AT' | 'CREATED_AT', sortOrder?: 'ASCENDING' | 'DESCENDING', shipmentStatus?: 'CREATED' | 'SHIPPED' | 'IN_TRANSIT' | 'RECEIVING' | 'DELIVERED' | 'CLOSED' | 'CANCELLED', updatedAfter?: string, updatedBefore?: string, maxResults?: number, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ShipmentListing>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listInboundShipments(sortBy, sortOrder, shipmentStatus, updatedAfter, updatedBefore, maxResults, nextToken, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Lists AWD inventory associated with a merchant with the ability to apply optional filters.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} [sku] Filter by seller or merchant SKU for the item.
         * @param {'ASCENDING' | 'DESCENDING'} [sortOrder] Sort the response in &#x60;ASCENDING&#x60; or &#x60;DESCENDING&#x60; order.
         * @param {'SHOW' | 'HIDE'} [details] Set to &#x60;SHOW&#x60; to return summaries with additional inventory details. Defaults to &#x60;HIDE,&#x60; which returns only inventory summary totals.
         * @param {string} [nextToken] Token to retrieve the next set of paginated results.
         * @param {number} [maxResults] Maximum number of results to return.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listInventory(sku?: string, sortOrder?: 'ASCENDING' | 'DESCENDING', details?: 'SHOW' | 'HIDE', nextToken?: string, maxResults?: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InventoryListing>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listInventory(sku, sortOrder, details, nextToken, maxResults, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * AwdApi - factory interface
 * @export
 */
export const AwdApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = AwdApiFp(configuration)
    return {
        /**
         * Retrieves an AWD inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api)
         * @param {string} shipmentId ID for the shipment. A shipment contains the cases being inbounded.
         * @param {'SHOW' | 'HIDE'} [skuQuantities] If equal to &#x60;SHOW&#x60;, the response includes the shipment SKU quantity details.  Defaults to &#x60;HIDE&#x60;, in which case the response does not contain SKU quantities
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getInboundShipment(shipmentId: string, skuQuantities?: 'SHOW' | 'HIDE', options?: any): AxiosPromise<InboundShipment> {
            return localVarFp.getInboundShipment(shipmentId, skuQuantities, options).then((request) => request(axios, basePath));
        },
        /**
         * Retrieves a summary of all the inbound AWD shipments associated with a merchant, with the ability to apply optional filters.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {'UPDATED_AT' | 'CREATED_AT'} [sortBy] Field to sort results by. By default, the response will be sorted by UPDATED_AT.
         * @param {'ASCENDING' | 'DESCENDING'} [sortOrder] Sort the response in ASCENDING or DESCENDING order. By default, the response will be sorted in DESCENDING order.
         * @param {'CREATED' | 'SHIPPED' | 'IN_TRANSIT' | 'RECEIVING' | 'DELIVERED' | 'CLOSED' | 'CANCELLED'} [shipmentStatus] Filter by inbound shipment status.
         * @param {string} [updatedAfter] List the inbound shipments that were updated after a certain time (inclusive). The date must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {string} [updatedBefore] List the inbound shipments that were updated before a certain time (inclusive). The date must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
         * @param {number} [maxResults] Maximum number of results to return.
         * @param {string} [nextToken] Token to retrieve the next set of paginated results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listInboundShipments(sortBy?: 'UPDATED_AT' | 'CREATED_AT', sortOrder?: 'ASCENDING' | 'DESCENDING', shipmentStatus?: 'CREATED' | 'SHIPPED' | 'IN_TRANSIT' | 'RECEIVING' | 'DELIVERED' | 'CLOSED' | 'CANCELLED', updatedAfter?: string, updatedBefore?: string, maxResults?: number, nextToken?: string, options?: any): AxiosPromise<ShipmentListing> {
            return localVarFp.listInboundShipments(sortBy, sortOrder, shipmentStatus, updatedAfter, updatedBefore, maxResults, nextToken, options).then((request) => request(axios, basePath));
        },
        /**
         * Lists AWD inventory associated with a merchant with the ability to apply optional filters.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         * @param {string} [sku] Filter by seller or merchant SKU for the item.
         * @param {'ASCENDING' | 'DESCENDING'} [sortOrder] Sort the response in &#x60;ASCENDING&#x60; or &#x60;DESCENDING&#x60; order.
         * @param {'SHOW' | 'HIDE'} [details] Set to &#x60;SHOW&#x60; to return summaries with additional inventory details. Defaults to &#x60;HIDE,&#x60; which returns only inventory summary totals.
         * @param {string} [nextToken] Token to retrieve the next set of paginated results.
         * @param {number} [maxResults] Maximum number of results to return.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listInventory(sku?: string, sortOrder?: 'ASCENDING' | 'DESCENDING', details?: 'SHOW' | 'HIDE', nextToken?: string, maxResults?: number, options?: any): AxiosPromise<InventoryListing> {
            return localVarFp.listInventory(sku, sortOrder, details, nextToken, maxResults, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getInboundShipment operation in AwdApi.
 * @export
 * @interface AwdApiGetInboundShipmentRequest
 */
export interface AwdApiGetInboundShipmentRequest {
    /**
     * ID for the shipment. A shipment contains the cases being inbounded.
     * @type {string}
     * @memberof AwdApiGetInboundShipment
     */
    readonly shipmentId: string

    /**
     * If equal to &#x60;SHOW&#x60;, the response includes the shipment SKU quantity details.  Defaults to &#x60;HIDE&#x60;, in which case the response does not contain SKU quantities
     * @type {'SHOW' | 'HIDE'}
     * @memberof AwdApiGetInboundShipment
     */
    readonly skuQuantities?: 'SHOW' | 'HIDE'
}

/**
 * Request parameters for listInboundShipments operation in AwdApi.
 * @export
 * @interface AwdApiListInboundShipmentsRequest
 */
export interface AwdApiListInboundShipmentsRequest {
    /**
     * Field to sort results by. By default, the response will be sorted by UPDATED_AT.
     * @type {'UPDATED_AT' | 'CREATED_AT'}
     * @memberof AwdApiListInboundShipments
     */
    readonly sortBy?: 'UPDATED_AT' | 'CREATED_AT'

    /**
     * Sort the response in ASCENDING or DESCENDING order. By default, the response will be sorted in DESCENDING order.
     * @type {'ASCENDING' | 'DESCENDING'}
     * @memberof AwdApiListInboundShipments
     */
    readonly sortOrder?: 'ASCENDING' | 'DESCENDING'

    /**
     * Filter by inbound shipment status.
     * @type {'CREATED' | 'SHIPPED' | 'IN_TRANSIT' | 'RECEIVING' | 'DELIVERED' | 'CLOSED' | 'CANCELLED'}
     * @memberof AwdApiListInboundShipments
     */
    readonly shipmentStatus?: 'CREATED' | 'SHIPPED' | 'IN_TRANSIT' | 'RECEIVING' | 'DELIVERED' | 'CLOSED' | 'CANCELLED'

    /**
     * List the inbound shipments that were updated after a certain time (inclusive). The date must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
     * @type {string}
     * @memberof AwdApiListInboundShipments
     */
    readonly updatedAfter?: string

    /**
     * List the inbound shipments that were updated before a certain time (inclusive). The date must be in &lt;a href&#x3D;\&#39;https://developer-docs.amazon.com/sp-api/docs/iso-8601\&#39;&gt;ISO 8601&lt;/a&gt; format.
     * @type {string}
     * @memberof AwdApiListInboundShipments
     */
    readonly updatedBefore?: string

    /**
     * Maximum number of results to return.
     * @type {number}
     * @memberof AwdApiListInboundShipments
     */
    readonly maxResults?: number

    /**
     * Token to retrieve the next set of paginated results.
     * @type {string}
     * @memberof AwdApiListInboundShipments
     */
    readonly nextToken?: string
}

/**
 * Request parameters for listInventory operation in AwdApi.
 * @export
 * @interface AwdApiListInventoryRequest
 */
export interface AwdApiListInventoryRequest {
    /**
     * Filter by seller or merchant SKU for the item.
     * @type {string}
     * @memberof AwdApiListInventory
     */
    readonly sku?: string

    /**
     * Sort the response in &#x60;ASCENDING&#x60; or &#x60;DESCENDING&#x60; order.
     * @type {'ASCENDING' | 'DESCENDING'}
     * @memberof AwdApiListInventory
     */
    readonly sortOrder?: 'ASCENDING' | 'DESCENDING'

    /**
     * Set to &#x60;SHOW&#x60; to return summaries with additional inventory details. Defaults to &#x60;HIDE,&#x60; which returns only inventory summary totals.
     * @type {'SHOW' | 'HIDE'}
     * @memberof AwdApiListInventory
     */
    readonly details?: 'SHOW' | 'HIDE'

    /**
     * Token to retrieve the next set of paginated results.
     * @type {string}
     * @memberof AwdApiListInventory
     */
    readonly nextToken?: string

    /**
     * Maximum number of results to return.
     * @type {number}
     * @memberof AwdApiListInventory
     */
    readonly maxResults?: number
}

/**
 * AwdApi - object-oriented interface
 * @export
 * @class AwdApi
 * @extends {BaseAPI}
 */
export class AwdApi extends BaseAPI {
    /**
     * Retrieves an AWD inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api)
     * @param {AwdApiGetInboundShipmentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AwdApi
     */
    public getInboundShipment(requestParameters: AwdApiGetInboundShipmentRequest, options?: any) {
        return AwdApiFp(this.configuration).getInboundShipment(requestParameters.shipmentId, requestParameters.skuQuantities, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Retrieves a summary of all the inbound AWD shipments associated with a merchant, with the ability to apply optional filters.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {AwdApiListInboundShipmentsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AwdApi
     */
    public listInboundShipments(requestParameters: AwdApiListInboundShipmentsRequest = {}, options?: any) {
        return AwdApiFp(this.configuration).listInboundShipments(requestParameters.sortBy, requestParameters.sortOrder, requestParameters.shipmentStatus, requestParameters.updatedAfter, requestParameters.updatedBefore, requestParameters.maxResults, requestParameters.nextToken, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Lists AWD inventory associated with a merchant with the ability to apply optional filters.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {AwdApiListInventoryRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AwdApi
     */
    public listInventory(requestParameters: AwdApiListInventoryRequest = {}, options?: any) {
        return AwdApiFp(this.configuration).listInventory(requestParameters.sku, requestParameters.sortOrder, requestParameters.details, requestParameters.nextToken, requestParameters.maxResults, options).then((request) => request(this.axios, this.basePath));
    }
}


